/*
 *  _____ _____ ________  _
 * /  __//  __//  __/\  \//
 * | |  _|  \  |  \   \  / 
 * | |_//|  /_ |  /_  /  \ 
 * \____\\____\\____\/__/\\
 *
 * Graphics Environment for EXperimentations.
 *  Copyright (C) 2006 INRIA - Project ALICE
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  If you modify this software, you should include a notice giving the
 *  name of the person performing the modification, the date of modification,
 *  and the reason for such modification.
 *
 *  Contact: 
 *
 *     ALICE Project - INRIA
 *     INRIA Lorraine, 
 *     Campus Scientifique, BP 239
 *     54506 VANDOEUVRE LES NANCY CEDEX 
 *     FRANCE
 *
 *  Note that the GNU General Public License does not permit incorporating
 *  the Software into proprietary programs. 
 */

#include <Geex/graphics/geexapp.h>
#include <Geex/basics/file_system.h>
#include <Geex/basics/processor.h>
#include "rvd_app.h"

Geex::RVDApp* rvd_app() { return static_cast<Geex::RVDApp*>(Geex::GeexApp::instance()) ; }

void save() {
    rvd_app()->save() ;
}

void load() {
    rvd_app()->load() ;
}

void reset() {
    rvd_app()->reset() ;
}

void toggle_edit() {
    rvd_app()->edit() = !rvd_app()->edit() ;
}

void project() {
    rvd_app()->rvd()->project_on_boundary() ;
}

void split_non_manifold() {
    rvd_app()->rvd()->split_non_manifold_primal_triangles() ;
}

int main(int argc, char** argv) {
    Geex::initialize() ;
    Geex::RVDApp app(argc, argv) ;
    glut_viewer_add_key_func('Z', reset,       "Reset") ;
    glut_viewer_add_key_func('e', toggle_edit, "Toggle edit mode") ;
    glut_viewer_add_key_func('S', save,        "Save remesh") ;
    glut_viewer_add_key_func('F', split_non_manifold, "Fix non-manifold triangles") ;
    glut_viewer_add_key_func('L', load,        "Load remesh (points)") ;
    glut_viewer_add_key_func('P', project,     "Project on boundary") ;

    app.main_loop() ;
    Geex::terminate() ;
    return 0 ;
}
