#include "P2.h"
#include <Geex/symbolics/const_pow.h>
namespace Geex {
   P2::P2() : Function(3,9,4){}
   void P2::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_6+tmp_11;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_19 = p(2);
double tmp_21 = p(1);
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_38 = x(3);
double tmp_39 =  tmp_38+tmp_31;
double tmp_50 = p(0);
double f0 = (1.0/2.0)*1.0/( ( tmp_32*tmp_21-tmp_4*tmp_50)*tmp_8+( tmp_4*tmp_39-tmp_32*tmp_14)*tmp_19-( tmp_14*tmp_50-tmp_39*tmp_21)*tmp_12)*( ( tmp_8*tmp_21-tmp_19*tmp_14)*( ( tmp_1+tmp_2)*tmp_4+( tmp_29+tmp_28)*tmp_32-( tmp_6+tmp_10)*tmp_12)+2.0*( tmp_4*tmp_8+tmp_14*tmp_12)*p(3)+( tmp_21*tmp_12+tmp_19*tmp_4)*( ( tmp_29+tmp_38)*tmp_39+tmp_8*( tmp_6+tmp_5)+tmp_14*( tmp_13+tmp_2)));
f(0) = f0;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(3);
double tmp_11 =  tmp_10+tmp_7;
double tmp_12 = x(8);
double tmp_13 = -tmp_12;
double tmp_14 =  tmp_13+tmp_2;
double tmp_19 = x(4);
double tmp_20 = x(1);
double tmp_21 = -tmp_20;
double tmp_22 =  tmp_21+tmp_19;
double tmp_30 = p(2);
double tmp_32 = p(0);
double tmp_39 = x(7);
double tmp_40 =  tmp_39+tmp_21;
double tmp_51 = p(1);
double f1 = -(1.0/2.0)*1.0/( tmp_4*( tmp_51*tmp_8-tmp_32*tmp_40)+( tmp_51*tmp_11-tmp_32*tmp_22)*tmp_14+tmp_30*( tmp_11*tmp_40-tmp_8*tmp_22))*( ( tmp_32*tmp_14+tmp_30*tmp_8)*( tmp_4*( tmp_1+tmp_2)+( tmp_20+tmp_19)*tmp_22+( tmp_10+tmp_6)*tmp_11)+( tmp_40*( tmp_20+tmp_39)+( tmp_5+tmp_6)*tmp_8-( tmp_2+tmp_12)*tmp_14)*( tmp_32*tmp_4-tmp_30*tmp_11)+2.0*( tmp_4*tmp_8+tmp_14*tmp_11)*p(3));
f(1) = f1;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_28 = tmp_21*tmp_5;
double tmp_29 = -tmp_7*tmp_24;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_32+tmp_15;
double f2 = -(1.0/2.0)*( 2.0*p(3)*tmp_26-( ( tmp_14+tmp_15)*tmp_17+tmp_21*( tmp_20+tmp_2)+( tmp_23+tmp_9)*tmp_24)*tmp_13+tmp_30*( tmp_4*( tmp_1+tmp_2)+tmp_11*( tmp_8+tmp_9)-tmp_33*( tmp_15+tmp_31)))/( p(2)*tmp_26+tmp_17*tmp_13+tmp_33*tmp_30);
f(2) = f2;
}
      }
      if(do_g) {
{
double tmp_1 = p(2);
double tmp_2 = x(4);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = tmp_1*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(5);
double tmp_9 = x(2);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(0);
double tmp_16 = x(8);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_9;
double tmp_19 = tmp_7*tmp_18;
double tmp_20 = x(7);
double tmp_21 =  tmp_4+tmp_20;
double tmp_22 = tmp_1*tmp_21;
double tmp_23 =  tmp_22+tmp_19;
double tmp_26 = p(0);
double tmp_27 = tmp_26*tmp_21;
double tmp_28 = x(6);
double tmp_29 = -tmp_14;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = -tmp_7*tmp_30;
double tmp_32 =  tmp_27+tmp_31;
double tmp_33 = tmp_11*tmp_32;
double tmp_34 = tmp_30*tmp_5;
double tmp_35 = x(3);
double tmp_36 =  tmp_35+tmp_29;
double tmp_37 = -tmp_36*tmp_21;
double tmp_38 =  tmp_34+tmp_37;
double tmp_39 = tmp_1*tmp_38;
double tmp_40 = tmp_26*tmp_5;
double tmp_41 = -tmp_36*tmp_7;
double tmp_42 =  tmp_40+tmp_41;
double tmp_43 = tmp_42*tmp_18;
double g0_0 =  ( tmp_23*tmp_14-tmp_13*tmp_14)/( tmp_33+tmp_39+tmp_43)+( 2.0*( tmp_11*tmp_21+tmp_5*tmp_18)*p(3)+tmp_13*( tmp_18*( tmp_9+tmp_16)-( tmp_14+tmp_28)*tmp_30-tmp_21*( tmp_20+tmp_3))+tmp_23*( tmp_36*( tmp_14+tmp_35)+( tmp_8+tmp_9)*tmp_11+tmp_5*( tmp_2+tmp_3)))/const_pow<2,1>(( tmp_33+tmp_39+tmp_43))*( tmp_7*tmp_11+tmp_1*( tmp_20-tmp_2)+tmp_19)/2.0;
g(0,0) = g0_0;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(8);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_6+tmp_11;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_17 = p(3);
double tmp_19 = p(2);
double tmp_20 = tmp_19*tmp_14;
double tmp_21 = p(1);
double tmp_22 = -tmp_8*tmp_21;
double tmp_23 =  tmp_22+tmp_20;
double tmp_24 =  tmp_2+tmp_1;
double tmp_25 = tmp_24*tmp_4;
double tmp_26 =  tmp_6+tmp_10;
double tmp_27 = -tmp_12*tmp_26;
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_33 = tmp_32*tmp_30;
double tmp_34 =  tmp_27+tmp_25+tmp_33;
double tmp_36 =  tmp_2+tmp_13;
double tmp_37 = tmp_14*tmp_36;
double tmp_38 = x(3);
double tmp_39 =  tmp_31+tmp_38;
double tmp_40 =  tmp_38+tmp_29;
double tmp_41 = tmp_40*tmp_39;
double tmp_42 =  tmp_5+tmp_6;
double tmp_43 = tmp_42*tmp_8;
double tmp_44 =  tmp_37+tmp_41+tmp_43;
double tmp_45 = tmp_12*tmp_21;
double tmp_46 = tmp_19*tmp_4;
double tmp_47 =  tmp_45+tmp_46;
double tmp_53 = p(0);
double tmp_57 = tmp_53*tmp_4;
double tmp_58 = -tmp_32*tmp_21;
double tmp_59 =  tmp_57+tmp_58;
double tmp_60 = tmp_59*tmp_8;
double tmp_61 = tmp_32*tmp_14;
double tmp_62 = -tmp_4*tmp_39;
double tmp_63 =  tmp_62+tmp_61;
double tmp_64 = tmp_19*tmp_63;
double tmp_65 = tmp_53*tmp_14;
double tmp_66 = -tmp_39*tmp_21;
double tmp_67 =  tmp_66+tmp_65;
double tmp_68 = tmp_12*tmp_67;
double tmp_69 =  tmp_60+tmp_64+tmp_68;
double tmp_70 = const_pow<-1,1>(tmp_69);
double g0_1 = -( tmp_47*tmp_44+2.0*tmp_17*( tmp_4*tmp_8+tmp_12*tmp_14)-tmp_34*tmp_23)*( tmp_53*tmp_12+tmp_19*( tmp_28-tmp_38)+tmp_53*tmp_8)*const_pow<2,1>(tmp_70)/2.0-tmp_70*( 2.0*tmp_2*tmp_23+tmp_34*tmp_19+-2.0*tmp_2*tmp_47+-2.0*( tmp_5+tmp_11)*tmp_17-tmp_44*tmp_19)/2.0;
g(0,1) = g0_1;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_3+tmp_20;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_7*tmp_24;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = tmp_19*tmp_21;
double tmp_39 = -tmp_7*tmp_17;
double tmp_40 =  tmp_38+tmp_39;
double tmp_42 =  tmp_20+tmp_2;
double tmp_43 = tmp_42*tmp_21;
double tmp_44 =  tmp_9+tmp_23;
double tmp_45 = tmp_44*tmp_24;
double tmp_46 =  tmp_15+tmp_14;
double tmp_47 = tmp_17*tmp_46;
double tmp_48 =  tmp_47+tmp_45+tmp_43;
double tmp_50 = tmp_7*tmp_33;
double tmp_51 = tmp_19*tmp_4;
double tmp_52 =  tmp_50+tmp_51;
double tmp_56 = p(3);
double tmp_58 =  tmp_1+tmp_2;
double tmp_59 = tmp_4*tmp_58;
double tmp_60 =  tmp_31+tmp_15;
double tmp_61 = -tmp_60*tmp_33;
double tmp_62 =  tmp_9+tmp_8;
double tmp_63 = tmp_62*tmp_11;
double tmp_64 =  tmp_63+tmp_61+tmp_59;
double g0_2 = -( tmp_40*tmp_64+-2.0*tmp_56*( tmp_33*tmp_21+tmp_4*tmp_17)-tmp_48*tmp_52)*( tmp_28-tmp_4*tmp_5+tmp_7*tmp_11+tmp_29)/const_pow<2,1>(( tmp_18+tmp_27+tmp_34))/2.0+( 2.0*tmp_56*( tmp_1-tmp_20)-tmp_48*tmp_7+-2.0*tmp_40*tmp_15+2.0*tmp_15*tmp_52+tmp_64*tmp_7)/( tmp_18+tmp_27+tmp_34)/2.0;
g(0,2) = g0_2;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(8);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_6;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_19 = p(2);
double tmp_21 = p(1);
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_38 = x(3);
double tmp_39 =  tmp_31+tmp_38;
double tmp_45 = tmp_21*tmp_12;
double tmp_46 = tmp_19*tmp_4;
double tmp_47 =  tmp_46+tmp_45;
double tmp_50 = p(0);
double tmp_51 = tmp_50*tmp_4;
double tmp_52 = -tmp_21*tmp_32;
double tmp_53 =  tmp_51+tmp_52;
double tmp_54 = tmp_8*tmp_53;
double tmp_55 = tmp_32*tmp_14;
double tmp_56 = -tmp_4*tmp_39;
double tmp_57 =  tmp_55+tmp_56;
double tmp_58 = tmp_19*tmp_57;
double tmp_59 = tmp_50*tmp_14;
double tmp_60 = -tmp_21*tmp_39;
double tmp_61 =  tmp_59+tmp_60;
double tmp_62 = tmp_12*tmp_61;
double tmp_63 =  tmp_58+tmp_62+tmp_54;
double tmp_64 = const_pow<-1,1>(tmp_63);
double g0_3 = -tmp_47*tmp_38*tmp_64-tmp_47*( tmp_47*( tmp_8*( tmp_5+tmp_6)+( tmp_2+tmp_13)*tmp_14+( tmp_38+tmp_29)*tmp_39)+( tmp_8*tmp_21-tmp_19*tmp_14)*( ( tmp_28+tmp_29)*tmp_32-tmp_12*( tmp_6+tmp_10)+tmp_4*( tmp_2+tmp_1))+2.0*( tmp_12*tmp_14+tmp_8*tmp_4)*p(3))*const_pow<2,1>(tmp_64)/2.0;
g(0,3) = g0_3;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_17*tmp_13;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_21*tmp_11;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_24*tmp_4;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_21*tmp_5;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 =  tmp_2+tmp_1;
double tmp_39 = tmp_38*tmp_4;
double tmp_40 =  tmp_15+tmp_31;
double tmp_41 = -tmp_33*tmp_40;
double tmp_42 =  tmp_9+tmp_8;
double tmp_43 = tmp_11*tmp_42;
double tmp_44 =  tmp_43+tmp_41+tmp_39;
double tmp_46 = tmp_33*tmp_7;
double tmp_47 = tmp_4*tmp_19;
double tmp_48 =  tmp_46+tmp_47;
double tmp_50 = p(3);
double g0_4 =  1.0/const_pow<2,1>(( tmp_27+tmp_34+tmp_18))*( ( tmp_17*tmp_7-tmp_21*tmp_19)*tmp_44+( ( tmp_9+tmp_23)*tmp_24+tmp_17*( tmp_15+tmp_14)+( tmp_2+tmp_20)*tmp_21)*tmp_48+2.0*( tmp_17*tmp_4+tmp_33*tmp_21)*tmp_50)*( tmp_19*tmp_11+tmp_33*tmp_5)/2.0-1.0/( tmp_27+tmp_34+tmp_18)*( 2.0*tmp_20*tmp_48+2.0*tmp_33*tmp_50-tmp_44*tmp_19)/2.0;
g(0,4) = g0_4;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(8);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_6;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_17 = p(3);
double tmp_19 = p(2);
double tmp_21 = p(1);
double tmp_24 =  tmp_2+tmp_1;
double tmp_25 = tmp_24*tmp_4;
double tmp_26 =  tmp_6+tmp_10;
double tmp_27 = -tmp_12*tmp_26;
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_33 = tmp_30*tmp_32;
double tmp_34 =  tmp_27+tmp_25+tmp_33;
double tmp_38 = x(3);
double tmp_39 =  tmp_31+tmp_38;
double tmp_45 = tmp_21*tmp_12;
double tmp_46 = tmp_19*tmp_4;
double tmp_47 =  tmp_46+tmp_45;
double tmp_50 = p(0);
double tmp_51 = tmp_50*tmp_4;
double tmp_52 = -tmp_21*tmp_32;
double tmp_53 =  tmp_52+tmp_51;
double tmp_54 = tmp_8*tmp_53;
double tmp_55 = tmp_14*tmp_32;
double tmp_56 = -tmp_39*tmp_4;
double tmp_57 =  tmp_56+tmp_55;
double tmp_58 = tmp_57*tmp_19;
double tmp_59 = tmp_14*tmp_50;
double tmp_60 = -tmp_39*tmp_21;
double tmp_61 =  tmp_59+tmp_60;
double tmp_62 = tmp_12*tmp_61;
double tmp_63 =  tmp_62+tmp_54+tmp_58;
double tmp_64 = const_pow<-1,1>(tmp_63);
double g0_5 = -( 2.0*tmp_5*tmp_47+tmp_21*tmp_34+2.0*tmp_17*tmp_4)*tmp_64/2.0-tmp_53*const_pow<2,1>(tmp_64)*( tmp_34*( tmp_14*tmp_19-tmp_8*tmp_21)-( tmp_39*( tmp_29+tmp_38)+tmp_14*( tmp_2+tmp_13)+( tmp_5+tmp_6)*tmp_8)*tmp_47+-2.0*tmp_17*( tmp_14*tmp_12+tmp_8*tmp_4))/2.0;
g(0,5) = g0_5;
}
{
double tmp_1 = p(2);
double tmp_2 = x(4);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = tmp_1*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(5);
double tmp_9 = x(2);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_11*tmp_7;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(7);
double tmp_15 =  tmp_4+tmp_14;
double tmp_17 = x(8);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_9;
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_38 = x(3);
double tmp_39 =  tmp_31+tmp_38;
double tmp_50 = p(0);
double tmp_51 = tmp_15*tmp_50;
double tmp_52 = -tmp_32*tmp_7;
double tmp_53 =  tmp_52+tmp_51;
double tmp_54 = tmp_11*tmp_53;
double tmp_55 = tmp_5*tmp_32;
double tmp_56 = -tmp_39*tmp_15;
double tmp_57 =  tmp_55+tmp_56;
double tmp_58 = tmp_1*tmp_57;
double tmp_59 = tmp_5*tmp_50;
double tmp_60 = -tmp_39*tmp_7;
double tmp_61 =  tmp_59+tmp_60;
double tmp_62 = tmp_61*tmp_19;
double tmp_63 =  tmp_62+tmp_54+tmp_58;
double tmp_64 = const_pow<-1,1>(tmp_63);
double g0_6 =  const_pow<2,1>(tmp_64)*( ( ( tmp_17+tmp_9)*tmp_19-( tmp_28+tmp_29)*tmp_32-( tmp_14+tmp_3)*tmp_15)*tmp_13+( tmp_19*tmp_7+tmp_1*tmp_15)*( ( tmp_38+tmp_29)*tmp_39+tmp_11*( tmp_8+tmp_9)+tmp_5*( tmp_2+tmp_3))+2.0*( tmp_11*tmp_15+tmp_5*tmp_19)*p(3))*tmp_13/2.0+tmp_64*tmp_28*tmp_13;
g(0,6) = g0_6;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(8);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_6+tmp_11;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_17 = p(3);
double tmp_19 = p(2);
double tmp_20 = tmp_19*tmp_14;
double tmp_21 = p(1);
double tmp_22 = -tmp_8*tmp_21;
double tmp_23 =  tmp_22+tmp_20;
double tmp_28 = x(6);
double tmp_29 = x(0);
double tmp_31 = -tmp_29;
double tmp_32 =  tmp_31+tmp_28;
double tmp_36 =  tmp_2+tmp_13;
double tmp_37 = tmp_14*tmp_36;
double tmp_38 = x(3);
double tmp_39 =  tmp_31+tmp_38;
double tmp_40 =  tmp_38+tmp_29;
double tmp_41 = tmp_40*tmp_39;
double tmp_42 =  tmp_5+tmp_6;
double tmp_43 = tmp_8*tmp_42;
double tmp_44 =  tmp_43+tmp_37+tmp_41;
double tmp_51 = p(0);
double tmp_54 = tmp_51*tmp_4;
double tmp_55 = -tmp_21*tmp_32;
double tmp_56 =  tmp_55+tmp_54;
double tmp_57 = tmp_8*tmp_56;
double tmp_58 = tmp_32*tmp_14;
double tmp_59 = -tmp_4*tmp_39;
double tmp_60 =  tmp_58+tmp_59;
double tmp_61 = tmp_19*tmp_60;
double tmp_62 = tmp_51*tmp_14;
double tmp_63 = -tmp_21*tmp_39;
double tmp_64 =  tmp_62+tmp_63;
double tmp_65 = tmp_64*tmp_12;
double tmp_66 =  tmp_61+tmp_65+tmp_57;
double tmp_67 = const_pow<-1,1>(tmp_66);
double g0_7 = -const_pow<2,1>(tmp_67)*( tmp_19*tmp_39-tmp_8*tmp_51)*( ( tmp_19*tmp_4+tmp_21*tmp_12)*tmp_44-( tmp_32*( tmp_28+tmp_29)-tmp_12*( tmp_6+tmp_10)+( tmp_2+tmp_1)*tmp_4)*tmp_23+2.0*tmp_17*( tmp_12*tmp_14+tmp_8*tmp_4))/2.0-tmp_67*( 2.0*tmp_8*tmp_17+-2.0*tmp_1*tmp_23+tmp_44*tmp_19)/2.0;
g(0,7) = g0_7;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_11*tmp_7;
double tmp_13 =  tmp_6+tmp_12;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_10;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_26*tmp_19;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_29+tmp_28;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = p(3);
double tmp_40 =  tmp_20+tmp_2;
double tmp_41 = tmp_40*tmp_21;
double tmp_42 =  tmp_23+tmp_9;
double tmp_43 = tmp_42*tmp_24;
double tmp_44 =  tmp_14+tmp_15;
double tmp_45 = tmp_17*tmp_44;
double tmp_46 =  tmp_45+tmp_43+tmp_41;
double tmp_48 = tmp_21*tmp_19;
double tmp_49 = -tmp_17*tmp_7;
double tmp_50 =  tmp_48+tmp_49;
double g0_8 =  1.0/( tmp_27+tmp_34+tmp_18)*( tmp_46*tmp_7+2.0*tmp_31*tmp_50+2.0*tmp_21*tmp_38)/2.0-1.0/const_pow<2,1>(( tmp_27+tmp_34+tmp_18))*( ( tmp_33*tmp_7+tmp_4*tmp_19)*tmp_46+2.0*( tmp_33*tmp_21+tmp_4*tmp_17)*tmp_38+( tmp_33*( tmp_31+tmp_15)-tmp_4*( tmp_1+tmp_2)-( tmp_8+tmp_9)*tmp_11)*tmp_50)*tmp_30/2.0;
g(0,8) = g0_8;
}
{
double tmp_1 = p(2);
double tmp_2 = x(7);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 =  tmp_2+tmp_3;
double tmp_7 = tmp_5*tmp_6;
double tmp_8 = x(2);
double tmp_9 = x(8);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 =  tmp_8+tmp_9;
double tmp_13 = -tmp_11*tmp_12;
double tmp_14 = x(6);
double tmp_15 = x(0);
double tmp_16 =  tmp_14+tmp_15;
double tmp_17 = -tmp_15;
double tmp_18 =  tmp_17+tmp_14;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_13+tmp_7+tmp_19;
double tmp_22 = tmp_1*tmp_18;
double tmp_23 = p(0);
double tmp_24 = tmp_23*tmp_11;
double tmp_25 =  tmp_24+tmp_22;
double tmp_27 = x(4);
double tmp_28 =  tmp_4+tmp_27;
double tmp_29 =  tmp_27+tmp_3;
double tmp_30 = tmp_29*tmp_28;
double tmp_31 = x(3);
double tmp_32 =  tmp_17+tmp_31;
double tmp_33 =  tmp_31+tmp_15;
double tmp_34 = tmp_33*tmp_32;
double tmp_35 = x(5);
double tmp_36 =  tmp_35+tmp_8;
double tmp_37 = -tmp_8;
double tmp_38 =  tmp_35+tmp_37;
double tmp_39 = tmp_38*tmp_36;
double tmp_40 =  tmp_30+tmp_39+tmp_34;
double tmp_42 = tmp_1*tmp_32;
double tmp_43 = -tmp_38*tmp_23;
double tmp_44 =  tmp_42+tmp_43;
double tmp_47 = p(3);
double tmp_50 = tmp_23*tmp_5;
double tmp_51 = p(1);
double tmp_52 = -tmp_51*tmp_18;
double tmp_53 =  tmp_52+tmp_50;
double tmp_54 = tmp_38*tmp_53;
double tmp_55 = tmp_18*tmp_28;
double tmp_56 = -tmp_5*tmp_32;
double tmp_57 =  tmp_55+tmp_56;
double tmp_58 = tmp_1*tmp_57;
double tmp_59 = tmp_23*tmp_28;
double tmp_60 = -tmp_51*tmp_32;
double tmp_61 =  tmp_59+tmp_60;
double tmp_62 = tmp_61*tmp_11;
double g1_0 = -( 2.0*tmp_15*tmp_25+2.0*( tmp_35+tmp_10)*tmp_47+-2.0*tmp_15*tmp_44+tmp_1*tmp_40-tmp_1*tmp_20)/( tmp_58+tmp_62+tmp_54)/2.0-1.0/const_pow<2,1>(( tmp_58+tmp_62+tmp_54))*( 2.0*( tmp_11*tmp_32+tmp_38*tmp_18)*tmp_47+tmp_40*tmp_25-tmp_20*tmp_44)*( tmp_38*tmp_51-( tmp_27-tmp_2)*tmp_1+tmp_51*tmp_11)/2.0;
g(1,0) = g1_0;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_17*tmp_13;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_10;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_26*tmp_19;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_7*tmp_24;
double tmp_30 =  tmp_29+tmp_28;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = tmp_24*tmp_19;
double tmp_39 = -tmp_17*tmp_5;
double tmp_40 =  tmp_39+tmp_38;
double tmp_42 = tmp_11*tmp_19;
double tmp_43 = tmp_33*tmp_5;
double tmp_44 =  tmp_42+tmp_43;
double g1_1 =  ( tmp_40*tmp_2-tmp_2*tmp_44)/( tmp_27+tmp_34+tmp_18)+1.0/const_pow<2,1>(( tmp_27+tmp_34+tmp_18))*( tmp_43-( tmp_23-tmp_8)*tmp_19+tmp_17*tmp_5)*( ( tmp_24*( tmp_23+tmp_9)+( tmp_20+tmp_2)*tmp_21+( tmp_14+tmp_15)*tmp_17)*tmp_44+2.0*( tmp_11*tmp_17+tmp_33*tmp_24)*p(3)+tmp_40*( tmp_33*( tmp_15+tmp_31)-( tmp_8+tmp_9)*tmp_11-tmp_4*( tmp_1+tmp_2)))/2.0;
g(1,1) = g1_1;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_5*tmp_4;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_3+tmp_20;
double tmp_22 = tmp_21*tmp_11;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_21*tmp_5;
double tmp_29 = -tmp_7*tmp_24;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = tmp_19*tmp_11;
double tmp_39 = tmp_5*tmp_33;
double tmp_40 =  tmp_38+tmp_39;
double tmp_42 = tmp_19*tmp_24;
double tmp_43 = -tmp_5*tmp_17;
double tmp_44 =  tmp_43+tmp_42;
double tmp_46 =  tmp_1+tmp_2;
double tmp_47 = tmp_4*tmp_46;
double tmp_48 =  tmp_31+tmp_15;
double tmp_49 = -tmp_48*tmp_33;
double tmp_50 =  tmp_9+tmp_8;
double tmp_51 = tmp_50*tmp_11;
double tmp_52 =  tmp_47+tmp_51+tmp_49;
double tmp_56 = p(3);
double tmp_58 =  tmp_2+tmp_20;
double tmp_59 = tmp_21*tmp_58;
double tmp_60 =  tmp_9+tmp_23;
double tmp_61 = tmp_60*tmp_24;
double tmp_62 =  tmp_15+tmp_14;
double tmp_63 = tmp_17*tmp_62;
double tmp_64 =  tmp_63+tmp_61+tmp_59;
double g1_2 = -( tmp_28+tmp_7*tmp_11+tmp_29-tmp_5*tmp_4)*( tmp_40*tmp_64+2.0*tmp_56*( tmp_33*tmp_24+tmp_17*tmp_11)-tmp_44*tmp_52)/const_pow<2,1>(( tmp_34+tmp_18+tmp_27))/2.0+( tmp_5*tmp_64+2.0*tmp_56*( tmp_23-tmp_8)+2.0*tmp_15*tmp_44+-2.0*tmp_40*tmp_15-tmp_5*tmp_52)/( tmp_34+tmp_18+tmp_27)/2.0;
g(1,2) = g1_2;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_5*tmp_4;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_11*tmp_7;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_10;
double tmp_25 = -tmp_24*tmp_4;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = tmp_11*tmp_19;
double tmp_39 = tmp_33*tmp_5;
double tmp_40 =  tmp_38+tmp_39;
double tmp_42 =  tmp_2+tmp_1;
double tmp_43 = tmp_42*tmp_4;
double tmp_44 =  tmp_15+tmp_31;
double tmp_45 = -tmp_33*tmp_44;
double tmp_46 =  tmp_8+tmp_9;
double tmp_47 = tmp_11*tmp_46;
double tmp_48 =  tmp_43+tmp_47+tmp_45;
double tmp_50 = p(3);
double g1_3 =  ( tmp_33*tmp_7+tmp_19*tmp_4)*( tmp_48*( tmp_5*tmp_17-tmp_24*tmp_19)+tmp_40*( tmp_21*( tmp_20+tmp_2)+( tmp_14+tmp_15)*tmp_17+tmp_24*( tmp_23+tmp_9))+2.0*tmp_50*( tmp_33*tmp_24+tmp_11*tmp_17))/const_pow<2,1>(( tmp_18+tmp_27+tmp_34))/2.0-( tmp_48*tmp_19+-2.0*tmp_33*tmp_50+-2.0*tmp_23*tmp_40)/( tmp_18+tmp_27+tmp_34)/2.0;
g(1,3) = g1_3;
}
{
double tmp_1 = x(4);
double tmp_2 = p(2);
double tmp_3 = x(6);
double tmp_4 = x(0);
double tmp_5 = -tmp_4;
double tmp_6 =  tmp_5+tmp_3;
double tmp_7 = tmp_2*tmp_6;
double tmp_8 = x(2);
double tmp_9 = x(8);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = p(0);
double tmp_13 = tmp_11*tmp_12;
double tmp_14 =  tmp_7+tmp_13;
double tmp_15 = x(7);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 = tmp_18*tmp_12;
double tmp_20 = p(1);
double tmp_21 = -tmp_20*tmp_6;
double tmp_22 =  tmp_21+tmp_19;
double tmp_23 = x(5);
double tmp_24 = -tmp_8;
double tmp_25 =  tmp_24+tmp_23;
double tmp_26 = tmp_25*tmp_22;
double tmp_27 =  tmp_17+tmp_1;
double tmp_28 = tmp_27*tmp_6;
double tmp_29 = x(3);
double tmp_30 =  tmp_5+tmp_29;
double tmp_31 = -tmp_30*tmp_18;
double tmp_32 =  tmp_31+tmp_28;
double tmp_33 = tmp_2*tmp_32;
double tmp_34 = tmp_27*tmp_12;
double tmp_35 = -tmp_20*tmp_30;
double tmp_36 =  tmp_34+tmp_35;
double tmp_37 = tmp_11*tmp_36;
double g1_4 =  tmp_14/( tmp_33+tmp_37+tmp_26)*tmp_1-tmp_14*( tmp_14*( tmp_30*( tmp_29+tmp_4)+tmp_27*( tmp_16+tmp_1)+tmp_25*( tmp_8+tmp_23))+( tmp_12*tmp_25-tmp_30*tmp_2)*( ( tmp_15+tmp_16)*tmp_18-( tmp_8+tmp_9)*tmp_11+tmp_6*( tmp_3+tmp_4))+2.0*( tmp_30*tmp_11+tmp_6*tmp_25)*p(3))/const_pow<2,1>(( tmp_33+tmp_37+tmp_26))/2.0;
g(1,4) = g1_4;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(3);
double tmp_11 =  tmp_10+tmp_7;
double tmp_12 = x(8);
double tmp_13 = -tmp_12;
double tmp_14 =  tmp_2+tmp_13;
double tmp_17 = p(3);
double tmp_19 = x(4);
double tmp_20 = x(1);
double tmp_21 = -tmp_20;
double tmp_22 =  tmp_21+tmp_19;
double tmp_30 = p(2);
double tmp_31 = tmp_8*tmp_30;
double tmp_32 = p(0);
double tmp_33 = tmp_32*tmp_14;
double tmp_34 =  tmp_31+tmp_33;
double tmp_39 = x(7);
double tmp_40 =  tmp_21+tmp_39;
double tmp_41 =  tmp_39+tmp_20;
double tmp_42 = tmp_40*tmp_41;
double tmp_43 =  tmp_2+tmp_12;
double tmp_44 = -tmp_43*tmp_14;
double tmp_45 =  tmp_5+tmp_6;
double tmp_46 = tmp_8*tmp_45;
double tmp_47 =  tmp_42+tmp_46+tmp_44;
double tmp_50 = tmp_40*tmp_32;
double tmp_51 = p(1);
double tmp_52 = -tmp_8*tmp_51;
double tmp_53 =  tmp_52+tmp_50;
double tmp_54 = tmp_53*tmp_4;
double tmp_55 = tmp_8*tmp_22;
double tmp_56 = -tmp_11*tmp_40;
double tmp_57 =  tmp_55+tmp_56;
double tmp_58 = tmp_57*tmp_30;
double tmp_59 = tmp_22*tmp_32;
double tmp_60 = -tmp_11*tmp_51;
double tmp_61 =  tmp_59+tmp_60;
double tmp_62 = tmp_61*tmp_14;
double tmp_63 =  tmp_62+tmp_54+tmp_58;
double tmp_64 = const_pow<-1,1>(tmp_63);
double g1_5 =  ( 2.0*tmp_34*tmp_1+tmp_32*tmp_47+2.0*tmp_8*tmp_17)*tmp_64/2.0-( ( tmp_11*( tmp_6+tmp_10)+( tmp_19+tmp_20)*tmp_22+( tmp_2+tmp_1)*tmp_4)*tmp_34+2.0*( tmp_8*tmp_4+tmp_11*tmp_14)*tmp_17-( tmp_11*tmp_30-tmp_32*tmp_4)*tmp_47)*tmp_53*const_pow<2,1>(tmp_64)/2.0;
g(1,5) = g1_5;
}
{
double tmp_1 = p(2);
double tmp_2 = x(4);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_7 = p(1);
double tmp_8 = x(5);
double tmp_9 = x(2);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_14 = x(6);
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_19 = x(3);
double tmp_20 =  tmp_19+tmp_16;
double tmp_21 = x(8);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_9+tmp_22;
double tmp_26 = p(3);
double tmp_28 =  tmp_2+tmp_3;
double tmp_29 = tmp_5*tmp_28;
double tmp_30 =  tmp_15+tmp_19;
double tmp_31 = tmp_20*tmp_30;
double tmp_32 =  tmp_8+tmp_9;
double tmp_33 = tmp_11*tmp_32;
double tmp_34 =  tmp_29+tmp_33+tmp_31;
double tmp_36 = p(0);
double tmp_40 = tmp_20*tmp_1;
double tmp_41 = -tmp_36*tmp_11;
double tmp_42 =  tmp_40+tmp_41;
double tmp_43 = x(7);
double tmp_44 =  tmp_4+tmp_43;
double tmp_54 = tmp_36*tmp_44;
double tmp_55 = -tmp_17*tmp_7;
double tmp_56 =  tmp_55+tmp_54;
double tmp_57 = tmp_11*tmp_56;
double tmp_58 = tmp_17*tmp_5;
double tmp_59 = -tmp_20*tmp_44;
double tmp_60 =  tmp_58+tmp_59;
double tmp_61 = tmp_1*tmp_60;
double tmp_62 = tmp_36*tmp_5;
double tmp_63 = -tmp_20*tmp_7;
double tmp_64 =  tmp_62+tmp_63;
double tmp_65 = tmp_64*tmp_23;
double tmp_66 =  tmp_61+tmp_65+tmp_57;
double tmp_67 = const_pow<-1,1>(tmp_66);
double g1_6 = -( tmp_1*tmp_5-tmp_11*tmp_7)*( 2.0*tmp_26*( tmp_17*tmp_11+tmp_20*tmp_23)+tmp_34*( tmp_36*tmp_23+tmp_17*tmp_1)+tmp_42*( ( tmp_21+tmp_9)*tmp_23-tmp_44*( tmp_43+tmp_3)-tmp_17*( tmp_14+tmp_15)))*const_pow<2,1>(tmp_67)/2.0-( 2.0*tmp_42*tmp_14+-2.0*tmp_26*tmp_11-tmp_1*tmp_34)*tmp_67/2.0;
g(1,6) = g1_6;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_11*tmp_7;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_10;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_26*tmp_19;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_38 = tmp_24*tmp_19;
double tmp_39 = -tmp_17*tmp_5;
double tmp_40 =  tmp_39+tmp_38;
double g1_7 = -tmp_1*tmp_40/( tmp_27+tmp_34+tmp_18)+( ( tmp_24*( tmp_23+tmp_9)+tmp_17*( tmp_14+tmp_15)+( tmp_20+tmp_2)*tmp_21)*( tmp_11*tmp_19+tmp_33*tmp_5)+2.0*( tmp_33*tmp_24+tmp_11*tmp_17)*p(3)-tmp_40*( tmp_11*( tmp_8+tmp_9)-tmp_33*( tmp_31+tmp_15)+tmp_4*( tmp_1+tmp_2)))*tmp_40/const_pow<2,1>(( tmp_27+tmp_34+tmp_18))/2.0;
g(1,7) = g1_7;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_5*tmp_4;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = -tmp_11*tmp_7;
double tmp_13 =  tmp_6+tmp_12;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = tmp_17*tmp_13;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_3+tmp_20;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_24*tmp_4;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_30*tmp_33;
double tmp_38 = tmp_24*tmp_19;
double tmp_39 = -tmp_17*tmp_5;
double tmp_40 =  tmp_38+tmp_39;
double tmp_42 = p(3);
double tmp_44 =  tmp_2+tmp_20;
double tmp_45 = tmp_21*tmp_44;
double tmp_46 =  tmp_9+tmp_23;
double tmp_47 = tmp_24*tmp_46;
double tmp_48 =  tmp_14+tmp_15;
double tmp_49 = tmp_17*tmp_48;
double tmp_50 =  tmp_49+tmp_47+tmp_45;
double g1_8 = -1.0/( tmp_27+tmp_34+tmp_18)*( 2.0*tmp_24*tmp_42+2.0*tmp_31*tmp_40+tmp_5*tmp_50)/2.0+tmp_30/const_pow<2,1>(( tmp_27+tmp_34+tmp_18))*( tmp_50*( tmp_11*tmp_19+tmp_5*tmp_33)+2.0*( tmp_24*tmp_33+tmp_17*tmp_11)*tmp_42-tmp_40*( tmp_11*( tmp_8+tmp_9)+( tmp_2+tmp_1)*tmp_4-( tmp_31+tmp_15)*tmp_33))/2.0;
g(1,8) = g1_8;
}
{
double tmp_1 = x(4);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = x(3);
double tmp_8 = x(0);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = p(1);
double tmp_12 = -tmp_10*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_15 =  tmp_1+tmp_2;
double tmp_16 = tmp_4*tmp_15;
double tmp_17 =  tmp_7+tmp_8;
double tmp_18 = tmp_10*tmp_17;
double tmp_19 = x(5);
double tmp_20 = x(2);
double tmp_21 =  tmp_20+tmp_19;
double tmp_22 = -tmp_20;
double tmp_23 =  tmp_22+tmp_19;
double tmp_24 = tmp_23*tmp_21;
double tmp_25 =  tmp_24+tmp_18+tmp_16;
double tmp_27 = x(7);
double tmp_28 = -tmp_1;
double tmp_29 =  tmp_27+tmp_28;
double tmp_30 = p(3);
double tmp_32 =  tmp_27+tmp_3;
double tmp_33 = tmp_32*tmp_5;
double tmp_34 = x(6);
double tmp_35 =  tmp_34+tmp_9;
double tmp_36 = -tmp_35*tmp_11;
double tmp_37 =  tmp_36+tmp_33;
double tmp_39 =  tmp_27+tmp_2;
double tmp_40 = tmp_32*tmp_39;
double tmp_41 = x(8);
double tmp_42 = -tmp_41;
double tmp_43 =  tmp_20+tmp_42;
double tmp_44 =  tmp_20+tmp_41;
double tmp_45 = -tmp_43*tmp_44;
double tmp_46 =  tmp_8+tmp_34;
double tmp_47 = tmp_35*tmp_46;
double tmp_48 =  tmp_45+tmp_40+tmp_47;
double tmp_51 = tmp_23*tmp_37;
double tmp_52 = p(2);
double tmp_53 = tmp_35*tmp_4;
double tmp_54 = -tmp_10*tmp_32;
double tmp_55 =  tmp_53+tmp_54;
double tmp_56 = tmp_55*tmp_52;
double tmp_57 = tmp_43*tmp_13;
double g2_0 =  ( tmp_11*tmp_43+tmp_52*tmp_29+tmp_23*tmp_11)/const_pow<2,1>(( tmp_56+tmp_57+tmp_51))*( tmp_48*tmp_13-tmp_37*tmp_25+2.0*tmp_55*tmp_30)/2.0-1.0/( tmp_56+tmp_57+tmp_51)*( 2.0*tmp_30*tmp_29+-2.0*tmp_8*tmp_13+tmp_48*tmp_11-tmp_11*tmp_25+2.0*tmp_8*tmp_37)/2.0;
g(2,0) = g2_0;
}
{
double tmp_1 = p(2);
double tmp_2 = x(6);
double tmp_3 = x(3);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_2+tmp_4;
double tmp_7 = x(2);
double tmp_8 = x(8);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = p(0);
double tmp_13 = x(5);
double tmp_14 = -tmp_7;
double tmp_15 =  tmp_13+tmp_14;
double tmp_18 = x(7);
double tmp_19 = x(1);
double tmp_20 = -tmp_19;
double tmp_21 =  tmp_18+tmp_20;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = p(1);
double tmp_24 = x(0);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_2+tmp_25;
double tmp_27 = -tmp_23*tmp_26;
double tmp_28 =  tmp_27+tmp_22;
double tmp_29 = tmp_15*tmp_28;
double tmp_30 = x(4);
double tmp_31 =  tmp_30+tmp_20;
double tmp_32 = tmp_31*tmp_26;
double tmp_33 =  tmp_3+tmp_25;
double tmp_34 = -tmp_33*tmp_21;
double tmp_35 =  tmp_34+tmp_32;
double tmp_36 = tmp_35*tmp_1;
double tmp_37 = tmp_11*tmp_31;
double tmp_38 = -tmp_23*tmp_33;
double tmp_39 =  tmp_37+tmp_38;
double tmp_40 = tmp_10*tmp_39;
double tmp_41 =  tmp_36+tmp_40+tmp_29;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 =  tmp_30+tmp_19;
double tmp_45 = tmp_31*tmp_44;
double tmp_46 =  tmp_24+tmp_3;
double tmp_47 = tmp_33*tmp_46;
double tmp_48 =  tmp_13+tmp_7;
double tmp_49 = tmp_15*tmp_48;
double tmp_50 =  tmp_49+tmp_47+tmp_45;
double tmp_52 = p(3);
double tmp_54 =  tmp_18+tmp_19;
double tmp_55 = tmp_21*tmp_54;
double tmp_56 =  tmp_8+tmp_7;
double tmp_57 = -tmp_56*tmp_10;
double tmp_58 =  tmp_2+tmp_24;
double tmp_59 = tmp_58*tmp_26;
double tmp_60 =  tmp_55+tmp_59+tmp_57;
double g2_1 = -( tmp_60*tmp_39-tmp_50*tmp_28+2.0*tmp_35*tmp_52)*( tmp_5*tmp_1+tmp_11*tmp_15+tmp_11*tmp_10)*const_pow<2,1>(tmp_42)/2.0+( tmp_11*tmp_60+-2.0*tmp_19*tmp_28+2.0*tmp_5*tmp_52+2.0*tmp_19*tmp_39-tmp_11*tmp_50)*tmp_42/2.0;
g(2,1) = g2_1;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_3+tmp_20;
double tmp_22 = tmp_21*tmp_11;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_24*tmp_4;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_19*tmp_26;
double tmp_28 = tmp_21*tmp_5;
double tmp_29 = -tmp_24*tmp_7;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double g2_2 = -( tmp_13*( tmp_24*( tmp_9+tmp_23)+( tmp_15+tmp_14)*tmp_17+tmp_21*( tmp_20+tmp_2))-tmp_30*( ( tmp_1+tmp_2)*tmp_4+( tmp_9+tmp_8)*tmp_11-( tmp_31+tmp_15)*tmp_33)+-2.0*tmp_26*p(3))/const_pow<2,1>(( tmp_34+tmp_18+tmp_27))*( tmp_28+tmp_29+tmp_7*tmp_11-tmp_4*tmp_5)/2.0+( tmp_15*tmp_30-tmp_15*tmp_13)/( tmp_34+tmp_18+tmp_27);
g(2,2) = g2_2;
}
{
double tmp_1 = x(2);
double tmp_2 = x(8);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(1);
double tmp_7 = x(7);
double tmp_8 = x(1);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = p(2);
double tmp_14 = p(0);
double tmp_15 = tmp_10*tmp_14;
double tmp_16 = x(6);
double tmp_17 = x(0);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_16+tmp_18;
double tmp_20 = -tmp_19*tmp_5;
double tmp_21 =  tmp_15+tmp_20;
double tmp_22 = x(5);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = tmp_24*tmp_21;
double tmp_26 = x(4);
double tmp_27 =  tmp_26+tmp_9;
double tmp_28 = tmp_19*tmp_27;
double tmp_29 = x(3);
double tmp_30 =  tmp_29+tmp_18;
double tmp_31 = -tmp_10*tmp_30;
double tmp_32 =  tmp_31+tmp_28;
double tmp_33 = tmp_32*tmp_11;
double tmp_34 = tmp_14*tmp_27;
double tmp_35 = -tmp_30*tmp_5;
double tmp_36 =  tmp_35+tmp_34;
double tmp_37 = tmp_4*tmp_36;
double tmp_38 =  tmp_25+tmp_33+tmp_37;
double tmp_39 = const_pow<-1,1>(tmp_38);
double tmp_49 = p(3);
double tmp_51 =  tmp_7+tmp_8;
double tmp_52 = tmp_10*tmp_51;
double tmp_53 =  tmp_1+tmp_2;
double tmp_54 = -tmp_53*tmp_4;
double tmp_55 =  tmp_16+tmp_17;
double tmp_56 = tmp_19*tmp_55;
double tmp_57 =  tmp_52+tmp_56+tmp_54;
double g2_3 = -( tmp_36*tmp_57+2.0*tmp_49*tmp_32-( tmp_30*( tmp_29+tmp_17)+( tmp_26+tmp_8)*tmp_27+tmp_24*( tmp_22+tmp_1))*tmp_21)*const_pow<2,1>(tmp_39)*( tmp_4*tmp_5+tmp_10*tmp_11)/2.0+tmp_39*( 2.0*tmp_29*tmp_21+2.0*tmp_49*tmp_10+tmp_57*tmp_5)/2.0;
g(2,3) = g2_3;
}
{
double tmp_1 = p(2);
double tmp_2 = x(6);
double tmp_3 = x(0);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_2+tmp_4;
double tmp_7 = x(2);
double tmp_8 = x(8);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = p(0);
double tmp_14 = x(7);
double tmp_15 = x(1);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = tmp_17*tmp_11;
double tmp_19 = p(1);
double tmp_20 = -tmp_5*tmp_19;
double tmp_21 =  tmp_20+tmp_18;
double tmp_22 = x(5);
double tmp_23 = -tmp_7;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = tmp_24*tmp_21;
double tmp_26 = x(4);
double tmp_27 =  tmp_16+tmp_26;
double tmp_28 = tmp_5*tmp_27;
double tmp_29 = x(3);
double tmp_30 =  tmp_29+tmp_4;
double tmp_31 = -tmp_17*tmp_30;
double tmp_32 =  tmp_31+tmp_28;
double tmp_33 = tmp_1*tmp_32;
double tmp_34 = tmp_27*tmp_11;
double tmp_35 = -tmp_30*tmp_19;
double tmp_36 =  tmp_34+tmp_35;
double tmp_37 = tmp_10*tmp_36;
double tmp_38 =  tmp_33+tmp_37+tmp_25;
double tmp_39 = const_pow<-1,1>(tmp_38);
double tmp_49 = p(3);
double tmp_51 =  tmp_14+tmp_15;
double tmp_52 = tmp_17*tmp_51;
double tmp_53 =  tmp_8+tmp_7;
double tmp_54 = -tmp_10*tmp_53;
double tmp_55 =  tmp_2+tmp_3;
double tmp_56 = tmp_55*tmp_5;
double tmp_57 =  tmp_52+tmp_56+tmp_54;
double g2_4 =  ( 2.0*tmp_21*tmp_26-tmp_11*tmp_57+-2.0*tmp_5*tmp_49)*tmp_39/2.0-( ( tmp_30*( tmp_3+tmp_29)+tmp_27*( tmp_15+tmp_26)+( tmp_22+tmp_7)*tmp_24)*tmp_21+-2.0*tmp_49*tmp_32-tmp_36*tmp_57)*( tmp_1*tmp_5+tmp_10*tmp_11)*const_pow<2,1>(tmp_39)/2.0;
g(2,4) = g2_4;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(0);
double tmp_6 = tmp_4*tmp_5;
double tmp_7 = p(1);
double tmp_8 = x(6);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = -tmp_7*tmp_11;
double tmp_13 =  tmp_6+tmp_12;
double tmp_14 = x(5);
double tmp_15 = x(2);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_13*tmp_17;
double tmp_19 = p(2);
double tmp_20 = x(4);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = tmp_11*tmp_21;
double tmp_23 = x(3);
double tmp_24 =  tmp_10+tmp_23;
double tmp_25 = -tmp_4*tmp_24;
double tmp_26 =  tmp_25+tmp_22;
double tmp_27 = tmp_26*tmp_19;
double tmp_28 = tmp_5*tmp_21;
double tmp_29 = -tmp_7*tmp_24;
double tmp_30 =  tmp_29+tmp_28;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_15+tmp_32;
double tmp_34 = tmp_33*tmp_30;
double tmp_35 =  tmp_27+tmp_34+tmp_18;
double tmp_36 = const_pow<-1,1>(tmp_35);
double g2_5 =  tmp_13*tmp_36*tmp_14-tmp_13*const_pow<2,1>(tmp_36)*( tmp_13*( ( tmp_23+tmp_9)*tmp_24+tmp_17*( tmp_14+tmp_15)+tmp_21*( tmp_20+tmp_2))-( tmp_4*( tmp_1+tmp_2)+tmp_11*( tmp_8+tmp_9)-tmp_33*( tmp_31+tmp_15))*tmp_30+-2.0*tmp_26*p(3))/2.0;
g(2,5) = g2_5;
}
{
double tmp_1 = p(2);
double tmp_2 = x(4);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_7 = p(1);
double tmp_8 = x(5);
double tmp_9 = x(2);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_14 = x(7);
double tmp_15 =  tmp_4+tmp_14;
double tmp_16 = p(0);
double tmp_17 = tmp_16*tmp_15;
double tmp_18 = x(6);
double tmp_19 = x(0);
double tmp_20 = -tmp_19;
double tmp_21 =  tmp_20+tmp_18;
double tmp_22 = -tmp_7*tmp_21;
double tmp_23 =  tmp_17+tmp_22;
double tmp_24 = tmp_23*tmp_11;
double tmp_25 = tmp_5*tmp_21;
double tmp_26 = x(3);
double tmp_27 =  tmp_26+tmp_20;
double tmp_28 = -tmp_27*tmp_15;
double tmp_29 =  tmp_28+tmp_25;
double tmp_30 = tmp_29*tmp_1;
double tmp_31 = tmp_16*tmp_5;
double tmp_32 = -tmp_7*tmp_27;
double tmp_33 =  tmp_31+tmp_32;
double tmp_34 = x(8);
double tmp_35 = -tmp_34;
double tmp_36 =  tmp_9+tmp_35;
double tmp_37 = tmp_36*tmp_33;
double tmp_38 =  tmp_30+tmp_24+tmp_37;
double tmp_39 = const_pow<-1,1>(tmp_38);
double tmp_41 =  tmp_2+tmp_3;
double tmp_42 = tmp_5*tmp_41;
double tmp_43 =  tmp_26+tmp_19;
double tmp_44 = tmp_27*tmp_43;
double tmp_45 =  tmp_8+tmp_9;
double tmp_46 = tmp_45*tmp_11;
double tmp_47 =  tmp_42+tmp_46+tmp_44;
double tmp_49 = p(3);
double g2_6 = -tmp_39*( 2.0*tmp_5*tmp_49+2.0*tmp_33*tmp_18+tmp_7*tmp_47)/2.0-( tmp_23*tmp_47-( ( tmp_14+tmp_3)*tmp_15-( tmp_34+tmp_9)*tmp_36+( tmp_18+tmp_19)*tmp_21)*tmp_33+-2.0*tmp_29*tmp_49)*const_pow<2,1>(tmp_39)*( tmp_1*tmp_5-tmp_7*tmp_11)/2.0;
g(2,6) = g2_6;
}
{
double tmp_1 = x(3);
double tmp_2 = x(0);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = p(2);
double tmp_7 = x(5);
double tmp_8 = x(2);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = p(0);
double tmp_14 = x(7);
double tmp_15 = x(1);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = tmp_17*tmp_11;
double tmp_19 = p(1);
double tmp_20 = x(6);
double tmp_21 =  tmp_20+tmp_3;
double tmp_22 = -tmp_19*tmp_21;
double tmp_23 =  tmp_22+tmp_18;
double tmp_24 = tmp_10*tmp_23;
double tmp_25 = x(4);
double tmp_26 =  tmp_16+tmp_25;
double tmp_27 = tmp_26*tmp_21;
double tmp_28 = -tmp_4*tmp_17;
double tmp_29 =  tmp_27+tmp_28;
double tmp_30 = tmp_29*tmp_5;
double tmp_31 = tmp_26*tmp_11;
double tmp_32 = -tmp_19*tmp_4;
double tmp_33 =  tmp_32+tmp_31;
double tmp_34 = x(8);
double tmp_35 = -tmp_34;
double tmp_36 =  tmp_35+tmp_8;
double tmp_37 = tmp_36*tmp_33;
double tmp_38 =  tmp_30+tmp_24+tmp_37;
double tmp_39 = const_pow<-1,1>(tmp_38);
double tmp_41 =  tmp_15+tmp_25;
double tmp_42 = tmp_26*tmp_41;
double tmp_43 =  tmp_1+tmp_2;
double tmp_44 = tmp_4*tmp_43;
double tmp_45 =  tmp_7+tmp_8;
double tmp_46 = tmp_10*tmp_45;
double tmp_47 =  tmp_44+tmp_42+tmp_46;
double tmp_49 = p(3);
double g2_7 = -const_pow<2,1>(tmp_39)*( tmp_47*tmp_23+tmp_33*( tmp_36*( tmp_8+tmp_34)-tmp_17*( tmp_14+tmp_15)-( tmp_20+tmp_2)*tmp_21)+-2.0*tmp_29*tmp_49)*( tmp_10*tmp_11-tmp_4*tmp_5)/2.0+( 2.0*tmp_4*tmp_49+tmp_47*tmp_11+-2.0*tmp_33*tmp_14)*tmp_39/2.0;
g(2,7) = g2_7;
}
{
double tmp_1 = x(4);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(0);
double tmp_6 = tmp_5*tmp_4;
double tmp_7 = x(3);
double tmp_8 = x(0);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = p(1);
double tmp_12 = -tmp_10*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = x(7);
double tmp_15 =  tmp_3+tmp_14;
double tmp_16 = tmp_5*tmp_15;
double tmp_17 = x(6);
double tmp_18 =  tmp_9+tmp_17;
double tmp_19 = -tmp_18*tmp_11;
double tmp_20 =  tmp_19+tmp_16;
double tmp_21 = x(5);
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_21+tmp_23;
double tmp_25 = tmp_24*tmp_20;
double tmp_26 = p(2);
double tmp_27 = tmp_18*tmp_4;
double tmp_28 = -tmp_15*tmp_10;
double tmp_29 =  tmp_28+tmp_27;
double tmp_30 = tmp_29*tmp_26;
double tmp_31 = x(8);
double tmp_32 = -tmp_31;
double tmp_33 =  tmp_22+tmp_32;
double tmp_34 = tmp_13*tmp_33;
double tmp_35 =  tmp_34+tmp_25+tmp_30;
double tmp_36 = const_pow<-1,1>(tmp_35);
double g2_8 = -tmp_31*tmp_13*tmp_36+( ( ( tmp_8+tmp_7)*tmp_10+( tmp_1+tmp_2)*tmp_4+tmp_24*( tmp_21+tmp_22))*tmp_20-tmp_13*( tmp_15*( tmp_14+tmp_2)-( tmp_31+tmp_22)*tmp_33+tmp_18*( tmp_8+tmp_17))+-2.0*tmp_29*p(3))*tmp_13*const_pow<2,1>(tmp_36)/2.0;
g(2,8) = g2_8;
}
      }
   }
}
