#include "P1.h"
#include <Geex/symbolics/const_pow.h>
namespace Geex {
   P1::P1() : Function(3,6,8){}
   void P1::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(4);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = p(2);
double tmp_7 = x(5);
double tmp_8 = x(2);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = p(1);
double tmp_17 = p(6);
double tmp_19 = p(5);
double tmp_27 = x(3);
double tmp_28 = x(0);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_29+tmp_27;
double tmp_39 = p(0);
double tmp_45 = p(4);
double f0 = -(1.0/2.0)*( 2.0*p(3)*( tmp_19*tmp_10-tmp_4*tmp_17)-( tmp_30*( tmp_28+tmp_27)+tmp_4*( tmp_1+tmp_2)+( tmp_7+tmp_8)*tmp_10)*( tmp_17*tmp_11-tmp_19*tmp_5)+2.0*p(7)*( tmp_4*tmp_5-tmp_10*tmp_11))/( ( tmp_19*tmp_39-tmp_45*tmp_11)*tmp_10-( tmp_19*tmp_30-tmp_4*tmp_45)*tmp_5+( tmp_30*tmp_11-tmp_4*tmp_39)*tmp_17);
f(0) = f0;
}
{
double tmp_2 = x(5);
double tmp_3 = x(2);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = p(4);
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = p(6);
double tmp_16 = p(0);
double tmp_18 = p(2);
double tmp_23 = x(4);
double tmp_24 = x(1);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_23+tmp_25;
double tmp_40 = p(1);
double tmp_44 = p(5);
double f1 = (1.0/2.0)*( ( tmp_5*( tmp_2+tmp_3)+( tmp_23+tmp_24)*tmp_26+( tmp_8+tmp_9)*tmp_11)*( tmp_16*tmp_12-tmp_18*tmp_6)+-2.0*( tmp_11*tmp_18-tmp_16*tmp_5)*p(7)+2.0*p(3)*( tmp_11*tmp_12-tmp_5*tmp_6))/( tmp_12*( tmp_16*tmp_26-tmp_11*tmp_40)+( tmp_11*tmp_44-tmp_26*tmp_6)*tmp_18-tmp_5*( tmp_16*tmp_44-tmp_40*tmp_6));
f(1) = f1;
}
{
double tmp_2 = p(0);
double tmp_3 = x(4);
double tmp_4 = x(1);
double tmp_5 = -tmp_4;
double tmp_6 =  tmp_5+tmp_3;
double tmp_7 = tmp_2*tmp_6;
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = p(1);
double tmp_13 = -tmp_11*tmp_12;
double tmp_14 =  tmp_13+tmp_7;
double tmp_17 = p(5);
double tmp_18 = tmp_11*tmp_17;
double tmp_19 = p(4);
double tmp_20 = -tmp_6*tmp_19;
double tmp_21 =  tmp_18+tmp_20;
double tmp_23 = tmp_2*tmp_17;
double tmp_24 = -tmp_12*tmp_19;
double tmp_25 =  tmp_23+tmp_24;
double tmp_26 = x(5);
double tmp_27 = x(2);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_26+tmp_28;
double f2 = (1.0/2.0)*( 2.0*p(3)*tmp_21+( ( tmp_3+tmp_4)*tmp_6+tmp_11*( tmp_8+tmp_9)+( tmp_26+tmp_27)*tmp_29)*tmp_25+2.0*tmp_14*p(7))/( tmp_25*tmp_29-tmp_14*p(6)-tmp_21*p(2));
f(2) = f2;
}
      }
      if(do_g) {
{
double tmp_1 = p(2);
double tmp_2 = p(5);
double tmp_3 = tmp_2*tmp_1;
double tmp_4 = p(6);
double tmp_5 = p(1);
double tmp_6 = -tmp_5*tmp_4;
double tmp_7 =  tmp_6+tmp_3;
double tmp_8 = x(0);
double tmp_9 = p(0);
double tmp_10 = x(4);
double tmp_11 = x(1);
double tmp_12 = -tmp_11;
double tmp_13 =  tmp_12+tmp_10;
double tmp_14 = tmp_9*tmp_13;
double tmp_15 = x(3);
double tmp_16 = -tmp_8;
double tmp_17 =  tmp_15+tmp_16;
double tmp_18 = -tmp_5*tmp_17;
double tmp_19 =  tmp_14+tmp_18;
double tmp_20 = tmp_19*tmp_4;
double tmp_21 = x(5);
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_21+tmp_23;
double tmp_25 = tmp_2*tmp_9;
double tmp_26 = p(4);
double tmp_27 = -tmp_5*tmp_26;
double tmp_28 =  tmp_27+tmp_25;
double tmp_29 = -tmp_24*tmp_28;
double tmp_30 = tmp_2*tmp_17;
double tmp_31 = -tmp_13*tmp_26;
double tmp_32 =  tmp_31+tmp_30;
double tmp_33 = tmp_32*tmp_1;
double g0_0 =  1.0/const_pow<2,1>(( tmp_29+tmp_20+tmp_33))*( ( tmp_24*( tmp_21+tmp_22)+tmp_13*( tmp_11+tmp_10)+( tmp_8+tmp_15)*tmp_17)*tmp_7+2.0*( tmp_13*tmp_1-tmp_5*tmp_24)*p(7)+2.0*p(3)*( tmp_2*tmp_24-tmp_4*tmp_13))*tmp_7/2.0-1.0/( tmp_29+tmp_20+tmp_33)*tmp_8*tmp_7;
g(0,0) = g0_0;
}
{
double tmp_1 = p(0);
double tmp_2 = p(6);
double tmp_4 = p(4);
double tmp_5 = p(2);
double tmp_8 = x(4);
double tmp_9 = x(1);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = tmp_1*tmp_11;
double tmp_13 = x(3);
double tmp_14 = x(0);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_13;
double tmp_17 = p(1);
double tmp_18 = -tmp_16*tmp_17;
double tmp_19 =  tmp_18+tmp_12;
double tmp_20 = tmp_19*tmp_2;
double tmp_21 = x(5);
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_21+tmp_23;
double tmp_25 = p(5);
double tmp_26 = tmp_25*tmp_1;
double tmp_27 = -tmp_4*tmp_17;
double tmp_28 =  tmp_26+tmp_27;
double tmp_29 = -tmp_24*tmp_28;
double tmp_30 = tmp_25*tmp_16;
double tmp_31 = -tmp_4*tmp_11;
double tmp_32 =  tmp_31+tmp_30;
double tmp_33 = tmp_32*tmp_5;
double tmp_34 =  tmp_29+tmp_20+tmp_33;
double tmp_35 = const_pow<-1,1>(tmp_34);
double tmp_40 = p(7);
double tmp_42 = p(3);
double tmp_54 = tmp_25*tmp_5;
double tmp_55 = -tmp_2*tmp_17;
double tmp_56 =  tmp_54+tmp_55;
double g0_1 = -tmp_35*( tmp_56*tmp_9+tmp_5*tmp_40-tmp_42*tmp_2)+( tmp_1*tmp_2-tmp_4*tmp_5)*( tmp_56*( tmp_24*( tmp_21+tmp_22)+( tmp_13+tmp_14)*tmp_16+( tmp_8+tmp_9)*tmp_11)+-2.0*( tmp_11*tmp_2-tmp_24*tmp_25)*tmp_42+2.0*( tmp_11*tmp_5-tmp_24*tmp_17)*tmp_40)*const_pow<2,1>(tmp_35)/2.0;
g(0,1) = g0_1;
}
{
double tmp_1 = p(7);
double tmp_2 = p(1);
double tmp_4 = x(2);
double tmp_5 = p(2);
double tmp_6 = p(5);
double tmp_7 = tmp_6*tmp_5;
double tmp_8 = p(6);
double tmp_9 = -tmp_8*tmp_2;
double tmp_10 =  tmp_9+tmp_7;
double tmp_12 = p(3);
double tmp_15 = p(0);
double tmp_16 = x(4);
double tmp_17 = x(1);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_20 = tmp_15*tmp_19;
double tmp_21 = x(3);
double tmp_22 = x(0);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_23+tmp_21;
double tmp_25 = -tmp_2*tmp_24;
double tmp_26 =  tmp_25+tmp_20;
double tmp_27 = tmp_26*tmp_8;
double tmp_28 = x(5);
double tmp_29 = -tmp_4;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = tmp_6*tmp_15;
double tmp_32 = p(4);
double tmp_33 = -tmp_32*tmp_2;
double tmp_34 =  tmp_31+tmp_33;
double tmp_35 = -tmp_30*tmp_34;
double tmp_36 = tmp_6*tmp_24;
double tmp_37 = -tmp_19*tmp_32;
double tmp_38 =  tmp_36+tmp_37;
double tmp_39 = tmp_38*tmp_5;
double g0_2 = -( 2.0*tmp_12*( tmp_6*tmp_30-tmp_19*tmp_8)+-2.0*tmp_1*( tmp_30*tmp_2-tmp_19*tmp_5)+tmp_10*( ( tmp_28+tmp_4)*tmp_30+tmp_19*( tmp_16+tmp_17)+( tmp_22+tmp_21)*tmp_24))/const_pow<2,1>(( tmp_35+tmp_39+tmp_27))*tmp_34/2.0-( tmp_6*tmp_12+tmp_4*tmp_10-tmp_1*tmp_2)/( tmp_35+tmp_39+tmp_27);
g(0,2) = g0_2;
}
{
double tmp_1 = p(2);
double tmp_2 = p(5);
double tmp_3 = tmp_1*tmp_2;
double tmp_4 = p(6);
double tmp_5 = p(1);
double tmp_6 = -tmp_4*tmp_5;
double tmp_7 =  tmp_3+tmp_6;
double tmp_8 = x(3);
double tmp_9 = p(0);
double tmp_10 = x(4);
double tmp_11 = x(1);
double tmp_12 = -tmp_11;
double tmp_13 =  tmp_12+tmp_10;
double tmp_14 = tmp_13*tmp_9;
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_8;
double tmp_18 = -tmp_17*tmp_5;
double tmp_19 =  tmp_14+tmp_18;
double tmp_20 = tmp_19*tmp_4;
double tmp_21 = x(5);
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_23+tmp_21;
double tmp_25 = tmp_2*tmp_9;
double tmp_26 = p(4);
double tmp_27 = -tmp_26*tmp_5;
double tmp_28 =  tmp_25+tmp_27;
double tmp_29 = -tmp_28*tmp_24;
double tmp_30 = tmp_17*tmp_2;
double tmp_31 = -tmp_13*tmp_26;
double tmp_32 =  tmp_30+tmp_31;
double tmp_33 = tmp_32*tmp_1;
double g0_3 =  tmp_7/( tmp_29+tmp_20+tmp_33)*tmp_8+( 2.0*p(3)*( tmp_4*tmp_13-tmp_2*tmp_24)-tmp_7*( tmp_13*( tmp_10+tmp_11)+( tmp_8+tmp_15)*tmp_17+( tmp_22+tmp_21)*tmp_24)+-2.0*p(7)*( tmp_13*tmp_1-tmp_5*tmp_24))*tmp_7/const_pow<2,1>(( tmp_29+tmp_20+tmp_33))/2.0;
g(0,3) = g0_3;
}
{
double tmp_1 = p(3);
double tmp_2 = p(6);
double tmp_4 = p(7);
double tmp_5 = p(2);
double tmp_7 = x(4);
double tmp_8 = p(5);
double tmp_9 = tmp_8*tmp_5;
double tmp_10 = p(1);
double tmp_11 = -tmp_2*tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_15 = p(0);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_15*tmp_18;
double tmp_20 = x(3);
double tmp_21 = x(0);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_20+tmp_22;
double tmp_24 = -tmp_23*tmp_10;
double tmp_25 =  tmp_24+tmp_19;
double tmp_26 = tmp_2*tmp_25;
double tmp_27 = x(5);
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_29+tmp_27;
double tmp_31 = tmp_8*tmp_15;
double tmp_32 = p(4);
double tmp_33 = -tmp_10*tmp_32;
double tmp_34 =  tmp_33+tmp_31;
double tmp_35 = -tmp_30*tmp_34;
double tmp_36 = tmp_23*tmp_8;
double tmp_37 = -tmp_18*tmp_32;
double tmp_38 =  tmp_36+tmp_37;
double tmp_39 = tmp_5*tmp_38;
double g0_4 = -( tmp_2*tmp_15-tmp_5*tmp_32)/const_pow<2,1>(( tmp_26+tmp_39+tmp_35))*( 2.0*( tmp_8*tmp_30-tmp_2*tmp_18)*tmp_1+2.0*tmp_4*( tmp_5*tmp_18-tmp_30*tmp_10)+( tmp_23*( tmp_20+tmp_21)+( tmp_7+tmp_16)*tmp_18+tmp_30*( tmp_27+tmp_28))*tmp_12)/2.0-( tmp_1*tmp_2-tmp_12*tmp_7-tmp_4*tmp_5)/( tmp_26+tmp_39+tmp_35);
g(0,4) = g0_4;
}
{
double tmp_1 = p(0);
double tmp_2 = p(5);
double tmp_3 = tmp_2*tmp_1;
double tmp_4 = p(4);
double tmp_5 = p(1);
double tmp_6 = -tmp_5*tmp_4;
double tmp_7 =  tmp_6+tmp_3;
double tmp_8 = x(4);
double tmp_9 = x(1);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = tmp_11*tmp_1;
double tmp_13 = x(3);
double tmp_14 = x(0);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_13+tmp_15;
double tmp_17 = -tmp_16*tmp_5;
double tmp_18 =  tmp_17+tmp_12;
double tmp_19 = p(6);
double tmp_20 = tmp_18*tmp_19;
double tmp_21 = x(5);
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 =  tmp_23+tmp_21;
double tmp_25 = -tmp_24*tmp_7;
double tmp_26 = p(2);
double tmp_27 = tmp_16*tmp_2;
double tmp_28 = -tmp_11*tmp_4;
double tmp_29 =  tmp_27+tmp_28;
double tmp_30 = tmp_29*tmp_26;
double tmp_31 =  tmp_20+tmp_30+tmp_25;
double tmp_32 = const_pow<-1,1>(tmp_31);
double tmp_37 = p(7);
double tmp_39 = p(3);
double tmp_51 = tmp_26*tmp_2;
double tmp_52 = -tmp_5*tmp_19;
double tmp_53 =  tmp_51+tmp_52;
double g0_5 =  ( tmp_39*tmp_2+tmp_21*tmp_53-tmp_5*tmp_37)*tmp_32+( ( tmp_24*( tmp_21+tmp_22)+tmp_16*( tmp_14+tmp_13)+tmp_11*( tmp_8+tmp_9))*tmp_53+2.0*tmp_39*( tmp_2*tmp_24-tmp_11*tmp_19)+2.0*( tmp_11*tmp_26-tmp_5*tmp_24)*tmp_37)*tmp_7*const_pow<2,1>(tmp_32)/2.0;
g(0,5) = g0_5;
}
{
double tmp_1 = p(3);
double tmp_2 = p(6);
double tmp_4 = p(0);
double tmp_5 = tmp_4*tmp_2;
double tmp_6 = p(4);
double tmp_7 = p(2);
double tmp_8 = -tmp_6*tmp_7;
double tmp_9 =  tmp_8+tmp_5;
double tmp_10 = x(0);
double tmp_12 = p(7);
double tmp_15 = x(4);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 = tmp_4*tmp_18;
double tmp_20 = x(3);
double tmp_21 = -tmp_10;
double tmp_22 =  tmp_20+tmp_21;
double tmp_23 = p(1);
double tmp_24 = -tmp_23*tmp_22;
double tmp_25 =  tmp_24+tmp_19;
double tmp_26 = tmp_2*tmp_25;
double tmp_27 = x(5);
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_27+tmp_29;
double tmp_31 = p(5);
double tmp_32 = tmp_4*tmp_31;
double tmp_33 = -tmp_23*tmp_6;
double tmp_34 =  tmp_33+tmp_32;
double tmp_35 = -tmp_30*tmp_34;
double tmp_36 = tmp_31*tmp_22;
double tmp_37 = -tmp_18*tmp_6;
double tmp_38 =  tmp_36+tmp_37;
double tmp_39 = tmp_38*tmp_7;
double g1_0 = -( 2.0*( tmp_22*tmp_7-tmp_4*tmp_30)*tmp_12-tmp_9*( ( tmp_27+tmp_28)*tmp_30+( tmp_20+tmp_10)*tmp_22+( tmp_15+tmp_16)*tmp_18)+2.0*tmp_1*( tmp_30*tmp_6-tmp_2*tmp_22))/const_pow<2,1>(( tmp_26+tmp_39+tmp_35))*( tmp_31*tmp_7-tmp_23*tmp_2)/2.0+1.0/( tmp_26+tmp_39+tmp_35)*( tmp_12*tmp_7-tmp_9*tmp_10-tmp_1*tmp_2);
g(1,0) = g1_0;
}
{
double tmp_2 = x(5);
double tmp_3 = x(2);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_2+tmp_4;
double tmp_6 = p(4);
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_8+tmp_10;
double tmp_12 = p(6);
double tmp_16 = p(0);
double tmp_17 = tmp_12*tmp_16;
double tmp_18 = p(2);
double tmp_19 = -tmp_18*tmp_6;
double tmp_20 =  tmp_17+tmp_19;
double tmp_23 = x(4);
double tmp_24 = x(1);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_25+tmp_23;
double tmp_39 = tmp_16*tmp_26;
double tmp_40 = p(1);
double tmp_41 = -tmp_11*tmp_40;
double tmp_42 =  tmp_41+tmp_39;
double tmp_43 = tmp_12*tmp_42;
double tmp_44 = p(5);
double tmp_45 = tmp_44*tmp_16;
double tmp_46 = -tmp_40*tmp_6;
double tmp_47 =  tmp_46+tmp_45;
double tmp_48 = -tmp_5*tmp_47;
double tmp_49 = tmp_11*tmp_44;
double tmp_50 = -tmp_6*tmp_26;
double tmp_51 =  tmp_49+tmp_50;
double tmp_52 = tmp_18*tmp_51;
double tmp_53 =  tmp_43+tmp_52+tmp_48;
double tmp_54 = const_pow<-1,1>(tmp_53);
double g1_1 = -tmp_20*tmp_24*tmp_54+tmp_20*( 2.0*( tmp_5*tmp_16-tmp_11*tmp_18)*p(7)+-2.0*p(3)*( tmp_5*tmp_6-tmp_11*tmp_12)+tmp_20*( tmp_11*( tmp_8+tmp_9)+tmp_26*( tmp_24+tmp_23)+tmp_5*( tmp_2+tmp_3)))*const_pow<2,1>(tmp_54)/2.0;
g(1,1) = g1_1;
}
{
double tmp_1 = x(2);
double tmp_2 = p(0);
double tmp_3 = p(6);
double tmp_4 = tmp_3*tmp_2;
double tmp_5 = p(4);
double tmp_6 = p(2);
double tmp_7 = -tmp_6*tmp_5;
double tmp_8 =  tmp_7+tmp_4;
double tmp_10 = p(3);
double tmp_12 = p(7);
double tmp_15 = x(4);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 = tmp_18*tmp_2;
double tmp_20 = x(3);
double tmp_21 = x(0);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_22+tmp_20;
double tmp_24 = p(1);
double tmp_25 = -tmp_23*tmp_24;
double tmp_26 =  tmp_25+tmp_19;
double tmp_27 = tmp_3*tmp_26;
double tmp_28 = x(5);
double tmp_29 = -tmp_1;
double tmp_30 =  tmp_28+tmp_29;
double tmp_31 = p(5);
double tmp_32 = tmp_31*tmp_2;
double tmp_33 = -tmp_5*tmp_24;
double tmp_34 =  tmp_32+tmp_33;
double tmp_35 = -tmp_34*tmp_30;
double tmp_36 = tmp_31*tmp_23;
double tmp_37 = -tmp_18*tmp_5;
double tmp_38 =  tmp_36+tmp_37;
double tmp_39 = tmp_6*tmp_38;
double g1_2 =  1.0/( tmp_35+tmp_39+tmp_27)*( tmp_10*tmp_5-tmp_12*tmp_2-tmp_1*tmp_8)-tmp_34/const_pow<2,1>(( tmp_35+tmp_39+tmp_27))*( ( ( tmp_21+tmp_20)*tmp_23+( tmp_28+tmp_1)*tmp_30+tmp_18*( tmp_16+tmp_15))*tmp_8+-2.0*tmp_12*( tmp_6*tmp_23-tmp_30*tmp_2)+-2.0*( tmp_30*tmp_5-tmp_3*tmp_23)*tmp_10)/2.0;
g(1,2) = g1_2;
}
{
double tmp_1 = p(3);
double tmp_2 = x(5);
double tmp_3 = x(2);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = p(4);
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = p(6);
double tmp_16 = p(0);
double tmp_17 = tmp_16*tmp_12;
double tmp_18 = p(2);
double tmp_19 = -tmp_6*tmp_18;
double tmp_20 =  tmp_17+tmp_19;
double tmp_23 = x(4);
double tmp_24 = x(1);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_25+tmp_23;
double tmp_36 = p(7);
double tmp_39 = tmp_16*tmp_26;
double tmp_40 = p(1);
double tmp_41 = -tmp_40*tmp_11;
double tmp_42 =  tmp_41+tmp_39;
double tmp_43 = tmp_42*tmp_12;
double tmp_44 = p(5);
double tmp_45 = tmp_16*tmp_44;
double tmp_46 = -tmp_40*tmp_6;
double tmp_47 =  tmp_45+tmp_46;
double tmp_48 = -tmp_47*tmp_5;
double tmp_49 = tmp_44*tmp_11;
double tmp_50 = -tmp_6*tmp_26;
double tmp_51 =  tmp_50+tmp_49;
double tmp_52 = tmp_51*tmp_18;
double tmp_53 =  tmp_48+tmp_43+tmp_52;
double tmp_54 = const_pow<-1,1>(tmp_53);
double g1_3 =  ( tmp_40*tmp_12-tmp_44*tmp_18)*const_pow<2,1>(tmp_54)*( 2.0*( tmp_16*tmp_5-tmp_11*tmp_18)*tmp_36+( tmp_26*( tmp_24+tmp_23)+( tmp_3+tmp_2)*tmp_5+( tmp_9+tmp_8)*tmp_11)*tmp_20+-2.0*( tmp_6*tmp_5-tmp_11*tmp_12)*tmp_1)/2.0+( tmp_8*tmp_20+tmp_1*tmp_12-tmp_18*tmp_36)*tmp_54;
g(1,3) = g1_3;
}
{
double tmp_2 = x(5);
double tmp_3 = x(2);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = p(4);
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = p(6);
double tmp_16 = p(0);
double tmp_17 = tmp_16*tmp_12;
double tmp_18 = p(2);
double tmp_19 = -tmp_18*tmp_6;
double tmp_20 =  tmp_19+tmp_17;
double tmp_23 = x(4);
double tmp_24 = x(1);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_25+tmp_23;
double tmp_39 = tmp_16*tmp_26;
double tmp_40 = p(1);
double tmp_41 = -tmp_11*tmp_40;
double tmp_42 =  tmp_41+tmp_39;
double tmp_43 = tmp_42*tmp_12;
double tmp_44 = p(5);
double tmp_45 = tmp_44*tmp_16;
double tmp_46 = -tmp_6*tmp_40;
double tmp_47 =  tmp_45+tmp_46;
double tmp_48 = -tmp_47*tmp_5;
double tmp_49 = tmp_44*tmp_11;
double tmp_50 = -tmp_6*tmp_26;
double tmp_51 =  tmp_50+tmp_49;
double tmp_52 = tmp_18*tmp_51;
double tmp_53 =  tmp_48+tmp_43+tmp_52;
double tmp_54 = const_pow<-1,1>(tmp_53);
double g1_4 = -( tmp_20*( tmp_26*( tmp_23+tmp_24)+( tmp_9+tmp_8)*tmp_11+( tmp_3+tmp_2)*tmp_5)+2.0*( tmp_16*tmp_5-tmp_18*tmp_11)*p(7)+2.0*p(3)*( tmp_11*tmp_12-tmp_6*tmp_5))*const_pow<2,1>(tmp_54)*tmp_20/2.0+tmp_54*tmp_23*tmp_20;
g(1,4) = g1_4;
}
{
double tmp_1 = x(5);
double tmp_2 = p(0);
double tmp_3 = p(6);
double tmp_4 = tmp_2*tmp_3;
double tmp_5 = p(4);
double tmp_6 = p(2);
double tmp_7 = -tmp_5*tmp_6;
double tmp_8 =  tmp_7+tmp_4;
double tmp_10 = p(3);
double tmp_12 = p(7);
double tmp_15 = x(4);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 = tmp_18*tmp_2;
double tmp_20 = x(3);
double tmp_21 = x(0);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_20+tmp_22;
double tmp_24 = p(1);
double tmp_25 = -tmp_23*tmp_24;
double tmp_26 =  tmp_19+tmp_25;
double tmp_27 = tmp_26*tmp_3;
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_29+tmp_1;
double tmp_31 = p(5);
double tmp_32 = tmp_2*tmp_31;
double tmp_33 = -tmp_5*tmp_24;
double tmp_34 =  tmp_32+tmp_33;
double tmp_35 = -tmp_30*tmp_34;
double tmp_36 = tmp_23*tmp_31;
double tmp_37 = -tmp_5*tmp_18;
double tmp_38 =  tmp_36+tmp_37;
double tmp_39 = tmp_6*tmp_38;
double g1_5 =  1.0/( tmp_39+tmp_27+tmp_35)*( tmp_2*tmp_12-tmp_10*tmp_5+tmp_1*tmp_8)+1.0/const_pow<2,1>(( tmp_39+tmp_27+tmp_35))*tmp_34*( 2.0*( tmp_30*tmp_2-tmp_23*tmp_6)*tmp_12+tmp_8*( tmp_18*( tmp_15+tmp_16)+tmp_23*( tmp_20+tmp_21)+tmp_30*( tmp_1+tmp_28))+-2.0*tmp_10*( tmp_30*tmp_5-tmp_23*tmp_3))/2.0;
g(1,5) = g1_5;
}
{
double tmp_1 = p(0);
double tmp_2 = p(5);
double tmp_3 = tmp_1*tmp_2;
double tmp_4 = p(4);
double tmp_5 = p(1);
double tmp_6 = -tmp_4*tmp_5;
double tmp_7 =  tmp_6+tmp_3;
double tmp_8 = x(0);
double tmp_10 = p(7);
double tmp_12 = p(3);
double tmp_15 = x(4);
double tmp_16 = x(1);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 = tmp_1*tmp_18;
double tmp_20 = x(3);
double tmp_21 = -tmp_8;
double tmp_22 =  tmp_20+tmp_21;
double tmp_23 = -tmp_5*tmp_22;
double tmp_24 =  tmp_23+tmp_19;
double tmp_25 = p(6);
double tmp_26 = tmp_24*tmp_25;
double tmp_27 = x(5);
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_29+tmp_27;
double tmp_31 = -tmp_7*tmp_30;
double tmp_32 = p(2);
double tmp_33 = tmp_2*tmp_22;
double tmp_34 = -tmp_4*tmp_18;
double tmp_35 =  tmp_33+tmp_34;
double tmp_36 = tmp_35*tmp_32;
double g2_0 = -( tmp_2*tmp_32-tmp_5*tmp_25)/const_pow<2,1>(( tmp_26+tmp_36+tmp_31))*( tmp_7*( ( tmp_20+tmp_8)*tmp_22+tmp_30*( tmp_27+tmp_28)+tmp_18*( tmp_15+tmp_16))+2.0*tmp_24*tmp_10+2.0*tmp_12*tmp_35)/2.0-( tmp_5*tmp_10-tmp_2*tmp_12-tmp_7*tmp_8)/( tmp_26+tmp_36+tmp_31);
g(2,0) = g2_0;
}
{
double tmp_1 = p(3);
double tmp_2 = p(4);
double tmp_4 = p(0);
double tmp_5 = p(7);
double tmp_7 = p(5);
double tmp_8 = tmp_7*tmp_4;
double tmp_9 = p(1);
double tmp_10 = -tmp_2*tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = x(1);
double tmp_15 = x(4);
double tmp_16 = -tmp_12;
double tmp_17 =  tmp_15+tmp_16;
double tmp_18 = tmp_4*tmp_17;
double tmp_19 = x(3);
double tmp_20 = x(0);
double tmp_21 = -tmp_20;
double tmp_22 =  tmp_21+tmp_19;
double tmp_23 = -tmp_9*tmp_22;
double tmp_24 =  tmp_23+tmp_18;
double tmp_25 = p(6);
double tmp_26 = tmp_24*tmp_25;
double tmp_27 = x(5);
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_27+tmp_29;
double tmp_31 = -tmp_11*tmp_30;
double tmp_32 = p(2);
double tmp_33 = tmp_7*tmp_22;
double tmp_34 = -tmp_17*tmp_2;
double tmp_35 =  tmp_34+tmp_33;
double tmp_36 = tmp_35*tmp_32;
double g2_1 = -( 2.0*tmp_1*tmp_35+tmp_11*( ( tmp_15+tmp_12)*tmp_17+tmp_22*( tmp_20+tmp_19)+( tmp_27+tmp_28)*tmp_30)+2.0*tmp_24*tmp_5)*( tmp_4*tmp_25-tmp_32*tmp_2)/const_pow<2,1>(( tmp_31+tmp_36+tmp_26))/2.0+( tmp_4*tmp_5+tmp_11*tmp_12-tmp_1*tmp_2)/( tmp_31+tmp_36+tmp_26);
g(2,1) = g2_1;
}
{
double tmp_2 = p(0);
double tmp_3 = x(4);
double tmp_4 = x(1);
double tmp_5 = -tmp_4;
double tmp_6 =  tmp_3+tmp_5;
double tmp_7 = tmp_6*tmp_2;
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = p(1);
double tmp_13 = -tmp_12*tmp_11;
double tmp_14 =  tmp_13+tmp_7;
double tmp_17 = p(5);
double tmp_18 = tmp_17*tmp_11;
double tmp_19 = p(4);
double tmp_20 = -tmp_6*tmp_19;
double tmp_21 =  tmp_20+tmp_18;
double tmp_23 = tmp_17*tmp_2;
double tmp_24 = -tmp_12*tmp_19;
double tmp_25 =  tmp_23+tmp_24;
double tmp_26 = x(5);
double tmp_27 = x(2);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_26+tmp_28;
double tmp_39 = p(6);
double tmp_40 = tmp_39*tmp_14;
double tmp_41 = -tmp_25*tmp_29;
double tmp_42 = p(2);
double tmp_43 = tmp_42*tmp_21;
double tmp_44 =  tmp_41+tmp_43+tmp_40;
double tmp_45 = const_pow<-1,1>(tmp_44);
double g2_2 =  ( tmp_25*( tmp_11*( tmp_9+tmp_8)+tmp_6*( tmp_3+tmp_4)+tmp_29*( tmp_26+tmp_27))+2.0*p(7)*tmp_14+2.0*p(3)*tmp_21)*tmp_25*const_pow<2,1>(tmp_45)/2.0+tmp_25*tmp_45*tmp_27;
g(2,2) = g2_2;
}
{
double tmp_1 = p(0);
double tmp_2 = x(4);
double tmp_3 = x(1);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = tmp_1*tmp_5;
double tmp_7 = x(3);
double tmp_8 = x(0);
double tmp_9 = -tmp_8;
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = p(1);
double tmp_12 = -tmp_10*tmp_11;
double tmp_13 =  tmp_12+tmp_6;
double tmp_14 = p(6);
double tmp_15 = tmp_13*tmp_14;
double tmp_16 = x(5);
double tmp_17 = x(2);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_20 = p(5);
double tmp_21 = tmp_1*tmp_20;
double tmp_22 = p(4);
double tmp_23 = -tmp_22*tmp_11;
double tmp_24 =  tmp_23+tmp_21;
double tmp_25 = -tmp_19*tmp_24;
double tmp_26 = p(2);
double tmp_27 = tmp_10*tmp_20;
double tmp_28 = -tmp_22*tmp_5;
double tmp_29 =  tmp_27+tmp_28;
double tmp_30 = tmp_29*tmp_26;
double tmp_35 = p(7);
double tmp_37 = p(3);
double g2_3 = -( tmp_20*tmp_37+tmp_7*tmp_24-tmp_35*tmp_11)/( tmp_30+tmp_15+tmp_25)+( 2.0*tmp_13*tmp_35+( tmp_10*( tmp_7+tmp_8)+( tmp_2+tmp_3)*tmp_5+tmp_19*( tmp_17+tmp_16))*tmp_24+2.0*tmp_29*tmp_37)*( tmp_26*tmp_20-tmp_14*tmp_11)/const_pow<2,1>(( tmp_30+tmp_15+tmp_25))/2.0;
g(2,3) = g2_3;
}
{
double tmp_1 = p(0);
double tmp_2 = p(5);
double tmp_3 = tmp_1*tmp_2;
double tmp_4 = p(4);
double tmp_5 = p(1);
double tmp_6 = -tmp_4*tmp_5;
double tmp_7 =  tmp_3+tmp_6;
double tmp_8 = x(4);
double tmp_10 = p(3);
double tmp_12 = p(7);
double tmp_15 = x(1);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_8;
double tmp_18 = tmp_17*tmp_1;
double tmp_19 = x(3);
double tmp_20 = x(0);
double tmp_21 = -tmp_20;
double tmp_22 =  tmp_21+tmp_19;
double tmp_23 = -tmp_5*tmp_22;
double tmp_24 =  tmp_23+tmp_18;
double tmp_25 = p(6);
double tmp_26 = tmp_24*tmp_25;
double tmp_27 = x(5);
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 =  tmp_29+tmp_27;
double tmp_31 = -tmp_7*tmp_30;
double tmp_32 = p(2);
double tmp_33 = tmp_2*tmp_22;
double tmp_34 = -tmp_4*tmp_17;
double tmp_35 =  tmp_33+tmp_34;
double tmp_36 = tmp_35*tmp_32;
double g2_4 = -( tmp_1*tmp_12-tmp_10*tmp_4+tmp_7*tmp_8)/( tmp_26+tmp_36+tmp_31)+( tmp_1*tmp_25-tmp_32*tmp_4)*( 2.0*tmp_24*tmp_12+2.0*tmp_35*tmp_10+( tmp_22*( tmp_20+tmp_19)+( tmp_27+tmp_28)*tmp_30+( tmp_8+tmp_15)*tmp_17)*tmp_7)/const_pow<2,1>(( tmp_26+tmp_36+tmp_31))/2.0;
g(2,4) = g2_4;
}
{
double tmp_2 = p(0);
double tmp_3 = x(4);
double tmp_4 = x(1);
double tmp_5 = -tmp_4;
double tmp_6 =  tmp_3+tmp_5;
double tmp_7 = tmp_2*tmp_6;
double tmp_8 = x(3);
double tmp_9 = x(0);
double tmp_10 = -tmp_9;
double tmp_11 =  tmp_10+tmp_8;
double tmp_12 = p(1);
double tmp_13 = -tmp_11*tmp_12;
double tmp_14 =  tmp_13+tmp_7;
double tmp_17 = p(5);
double tmp_18 = tmp_17*tmp_11;
double tmp_19 = p(4);
double tmp_20 = -tmp_19*tmp_6;
double tmp_21 =  tmp_20+tmp_18;
double tmp_23 = tmp_17*tmp_2;
double tmp_24 = -tmp_19*tmp_12;
double tmp_25 =  tmp_23+tmp_24;
double tmp_26 = x(5);
double tmp_27 = x(2);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_26+tmp_28;
double tmp_39 = p(6);
double tmp_40 = tmp_39*tmp_14;
double tmp_41 = -tmp_29*tmp_25;
double tmp_42 = p(2);
double tmp_43 = tmp_42*tmp_21;
double tmp_44 =  tmp_41+tmp_43+tmp_40;
double tmp_45 = const_pow<-1,1>(tmp_44);
double g2_5 = -tmp_26*tmp_45*tmp_25-const_pow<2,1>(tmp_45)*( 2.0*p(3)*tmp_21+( ( tmp_3+tmp_4)*tmp_6+tmp_11*( tmp_8+tmp_9)+tmp_29*( tmp_26+tmp_27))*tmp_25+2.0*p(7)*tmp_14)*tmp_25/2.0;
g(2,5) = g2_5;
}
      }
   }
}
