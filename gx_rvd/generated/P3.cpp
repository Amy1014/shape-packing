#include "P3.h"
#include <Geex/symbolics/const_pow.h>
namespace Geex {
   P3::P3() : Function(3,12,0){}
   void P3::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double f0 = -(1.0/2.0)*1.0/( ( tmp_31*tmp_16+tmp_27*tmp_8)*tmp_39-( tmp_27*tmp_18-tmp_31*tmp_12)*tmp_24-( tmp_16*tmp_18+tmp_8*tmp_12)*tmp_4)*( ( tmp_4*( tmp_1+tmp_2)+tmp_27*( tmp_25+tmp_10)+tmp_31*( tmp_6+tmp_29))*( tmp_24*tmp_18-tmp_39*tmp_8)-( ( tmp_9+tmp_10)*tmp_12+( tmp_6+tmp_17)*tmp_18+tmp_39*( tmp_38+tmp_1))*( tmp_31*tmp_24-tmp_4*tmp_8)-( tmp_16*( tmp_10+tmp_14)-( tmp_6+tmp_5)*tmp_8-( tmp_22+tmp_1)*tmp_24)*( tmp_31*tmp_39-tmp_4*tmp_18));
f(0) = f0;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double f1 = -(1.0/2.0)*1.0/( tmp_24*( tmp_12*tmp_31-tmp_27*tmp_18)-tmp_4*( tmp_8*tmp_12+tmp_18*tmp_16)+tmp_39*( tmp_31*tmp_16+tmp_8*tmp_27))*( ( tmp_12*( tmp_9+tmp_10)+( tmp_1+tmp_38)*tmp_39+( tmp_17+tmp_6)*tmp_18)*( tmp_27*tmp_24+tmp_4*tmp_16)+( ( tmp_5+tmp_6)*tmp_8+( tmp_1+tmp_22)*tmp_24-( tmp_14+tmp_10)*tmp_16)*( tmp_4*tmp_12-tmp_39*tmp_27)-( ( tmp_29+tmp_6)*tmp_31+tmp_27*( tmp_25+tmp_10)+tmp_4*( tmp_1+tmp_2))*( tmp_24*tmp_12+tmp_39*tmp_16));
f(1) = f1;
}
{
double tmp_1 = x(7);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(3);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = tmp_4*tmp_8;
double tmp_10 = x(6);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_6;
double tmp_13 = x(4);
double tmp_14 =  tmp_3+tmp_13;
double tmp_15 = tmp_14*tmp_12;
double tmp_16 =  tmp_15+tmp_9;
double tmp_17 = x(2);
double tmp_18 = x(11);
double tmp_19 = -tmp_18;
double tmp_20 =  tmp_17+tmp_19;
double tmp_23 = x(9);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_24+tmp_6;
double tmp_28 = x(10);
double tmp_30 = -tmp_28;
double tmp_31 =  tmp_30+tmp_2;
double tmp_37 = x(5);
double tmp_39 = -tmp_17;
double tmp_40 =  tmp_39+tmp_37;
double tmp_45 = tmp_31*tmp_12;
double tmp_46 = tmp_4*tmp_25;
double tmp_47 =  tmp_46+tmp_45;
double tmp_49 = tmp_14*tmp_25;
double tmp_50 = -tmp_8*tmp_31;
double tmp_51 =  tmp_49+tmp_50;
double tmp_52 = x(8);
double tmp_54 =  tmp_39+tmp_52;
double f2 = -(1.0/2.0)*( tmp_47*( ( tmp_5+tmp_6)*tmp_8+( tmp_2+tmp_13)*tmp_14+tmp_40*( tmp_17+tmp_37))-( ( tmp_17+tmp_18)*tmp_20+( tmp_2+tmp_28)*tmp_31+( tmp_6+tmp_23)*tmp_25)*tmp_16-tmp_51*( ( tmp_17+tmp_52)*tmp_54-( tmp_6+tmp_10)*tmp_12+tmp_4*( tmp_1+tmp_2)))/( tmp_54*tmp_51+tmp_16*tmp_20-tmp_40*tmp_47);
f(2) = f2;
}
      }
      if(do_g) {
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_44 = tmp_8*tmp_4;
double tmp_45 = -tmp_24*tmp_31;
double tmp_46 =  tmp_44+tmp_45;
double tmp_48 = tmp_24*tmp_18;
double tmp_49 = -tmp_8*tmp_39;
double tmp_50 =  tmp_48+tmp_49;
double tmp_52 = tmp_18*tmp_4;
double tmp_53 = -tmp_31*tmp_39;
double tmp_54 =  tmp_53+tmp_52;
double g0_0 = -( tmp_24*( tmp_30+tmp_17)-( tmp_30+tmp_5)*tmp_39-tmp_4*( tmp_5-tmp_17))/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( tmp_46*( ( tmp_9+tmp_10)*tmp_12+tmp_18*( tmp_6+tmp_17)+tmp_39*( tmp_38+tmp_1))+tmp_50*( ( tmp_25+tmp_10)*tmp_27+( tmp_2+tmp_1)*tmp_4+( tmp_6+tmp_29)*tmp_31)-( tmp_8*( tmp_5+tmp_6)-( tmp_10+tmp_14)*tmp_16+tmp_24*( tmp_22+tmp_1))*tmp_54)/2.0+( tmp_50*tmp_10-tmp_46*tmp_10+tmp_54*tmp_10)/( tmp_21+tmp_40+tmp_34);
g(0,0) = g0_0;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_4*tmp_44;
double tmp_46 =  tmp_10+tmp_25;
double tmp_47 = tmp_27*tmp_46;
double tmp_48 =  tmp_6+tmp_29;
double tmp_49 = tmp_48*tmp_31;
double tmp_50 =  tmp_45+tmp_49+tmp_47;
double tmp_54 = tmp_4*tmp_18;
double tmp_55 = -tmp_39*tmp_31;
double tmp_56 =  tmp_55+tmp_54;
double tmp_58 = tmp_4*tmp_8;
double tmp_59 = -tmp_24*tmp_31;
double tmp_60 =  tmp_58+tmp_59;
double tmp_62 = tmp_24*tmp_18;
double tmp_63 = -tmp_39*tmp_8;
double tmp_64 =  tmp_62+tmp_63;
double tmp_67 =  tmp_1+tmp_22;
double tmp_68 = tmp_67*tmp_24;
double tmp_69 =  tmp_5+tmp_6;
double tmp_70 = tmp_8*tmp_69;
double tmp_71 =  tmp_10+tmp_14;
double tmp_72 = -tmp_71*tmp_16;
double tmp_73 =  tmp_70+tmp_68+tmp_72;
double tmp_76 =  tmp_10+tmp_9;
double tmp_77 = tmp_12*tmp_76;
double tmp_78 =  tmp_1+tmp_38;
double tmp_79 = tmp_39*tmp_78;
double tmp_80 =  tmp_17+tmp_6;
double tmp_81 = tmp_80*tmp_18;
double tmp_82 =  tmp_77+tmp_81+tmp_79;
double g0_1 =  1.0/( tmp_21+tmp_40+tmp_34)*( 2.0*tmp_64*tmp_6-( tmp_22-tmp_38)*tmp_50-tmp_82*( tmp_22+tmp_3)+( tmp_3+tmp_38)*tmp_73+-2.0*tmp_60*tmp_6+2.0*tmp_56*tmp_6)/2.0-( tmp_56*tmp_73-tmp_60*tmp_82-tmp_64*tmp_50)*( ( tmp_15+tmp_9)*tmp_4+tmp_39*( tmp_15+tmp_25)+tmp_24*( tmp_26+tmp_9))/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))/2.0;
g(0,1) = g0_1;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_40+tmp_34+tmp_21;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_49 = tmp_4*tmp_8;
double tmp_50 = -tmp_31*tmp_24;
double tmp_51 =  tmp_50+tmp_49;
double tmp_52 =  tmp_9+tmp_10;
double tmp_53 = tmp_12*tmp_52;
double tmp_54 =  tmp_38+tmp_1;
double tmp_55 = tmp_54*tmp_39;
double tmp_56 =  tmp_6+tmp_17;
double tmp_57 = tmp_18*tmp_56;
double tmp_58 =  tmp_53+tmp_57+tmp_55;
double tmp_60 =  tmp_2+tmp_1;
double tmp_61 = tmp_60*tmp_4;
double tmp_62 =  tmp_25+tmp_10;
double tmp_63 = tmp_62*tmp_27;
double tmp_64 =  tmp_6+tmp_29;
double tmp_65 = tmp_31*tmp_64;
double tmp_66 =  tmp_65+tmp_63+tmp_61;
double tmp_67 = tmp_18*tmp_24;
double tmp_68 = -tmp_39*tmp_8;
double tmp_69 =  tmp_67+tmp_68;
double tmp_71 =  tmp_22+tmp_1;
double tmp_72 = tmp_71*tmp_24;
double tmp_73 =  tmp_5+tmp_6;
double tmp_74 = tmp_73*tmp_8;
double tmp_75 =  tmp_10+tmp_14;
double tmp_76 = -tmp_75*tmp_16;
double tmp_77 =  tmp_72+tmp_76+tmp_74;
double tmp_78 = tmp_18*tmp_4;
double tmp_79 = -tmp_31*tmp_39;
double tmp_80 =  tmp_78+tmp_79;
double g0_2 = -( tmp_12*tmp_8-tmp_28+tmp_31*tmp_16-tmp_32+tmp_18*tmp_16+tmp_27*tmp_8)*const_pow<2,1>(tmp_42)*( tmp_69*tmp_66+tmp_51*tmp_58-tmp_80*tmp_77)/2.0-( 2.0*tmp_51*tmp_1-tmp_66*( tmp_5-tmp_17)+-2.0*tmp_69*tmp_1+-2.0*tmp_80*tmp_1+( tmp_17+tmp_30)*tmp_77-tmp_58*( tmp_5+tmp_30))*tmp_42/2.0;
g(0,2) = g0_2;
}
{
double tmp_1 = x(3);
double tmp_2 = x(2);
double tmp_3 = x(11);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = x(7);
double tmp_7 = x(1);
double tmp_8 = -tmp_7;
double tmp_9 =  tmp_8+tmp_6;
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_1+tmp_11;
double tmp_13 = tmp_12*tmp_9;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_8;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_5;
double tmp_22 = x(8);
double tmp_23 = -tmp_2;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_7+tmp_30;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_27*tmp_9;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 = tmp_5*tmp_9;
double tmp_45 = -tmp_24*tmp_31;
double tmp_46 =  tmp_45+tmp_44;
double g0_3 =  tmp_1*tmp_46/( tmp_21+tmp_40+tmp_34)-tmp_46/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( ( tmp_9*( tmp_7+tmp_6)-tmp_16*( tmp_10+tmp_14)+( tmp_2+tmp_22)*tmp_24)*( tmp_39*tmp_31-tmp_5*tmp_18)+tmp_46*( ( tmp_38+tmp_2)*tmp_39+tmp_18*( tmp_7+tmp_17)+( tmp_10+tmp_1)*tmp_12)-( tmp_39*tmp_9-tmp_24*tmp_18)*( ( tmp_3+tmp_2)*tmp_5+( tmp_10+tmp_25)*tmp_27+( tmp_7+tmp_29)*tmp_31))/2.0;
g(0,3) = g0_3;
}
{
double tmp_1 = x(8);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(11);
double tmp_6 = -tmp_5;
double tmp_7 =  tmp_2+tmp_6;
double tmp_8 =  tmp_5+tmp_2;
double tmp_9 = tmp_8*tmp_7;
double tmp_10 = x(0);
double tmp_11 = x(9);
double tmp_12 = -tmp_11;
double tmp_13 =  tmp_12+tmp_10;
double tmp_14 =  tmp_11+tmp_10;
double tmp_15 = tmp_14*tmp_13;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 =  tmp_17+tmp_16;
double tmp_19 = -tmp_17;
double tmp_20 =  tmp_19+tmp_16;
double tmp_21 = tmp_18*tmp_20;
double tmp_22 =  tmp_21+tmp_9+tmp_15;
double tmp_24 = x(7);
double tmp_25 = -tmp_16;
double tmp_26 =  tmp_24+tmp_25;
double tmp_27 = tmp_7*tmp_26;
double tmp_28 = -tmp_4*tmp_20;
double tmp_29 =  tmp_27+tmp_28;
double tmp_30 = x(4);
double tmp_32 =  tmp_2+tmp_1;
double tmp_33 = tmp_32*tmp_4;
double tmp_34 =  tmp_24+tmp_16;
double tmp_35 = tmp_34*tmp_26;
double tmp_36 = x(6);
double tmp_37 = -tmp_36;
double tmp_38 =  tmp_37+tmp_10;
double tmp_39 =  tmp_10+tmp_36;
double tmp_40 = -tmp_38*tmp_39;
double tmp_41 =  tmp_33+tmp_40+tmp_35;
double tmp_44 = x(3);
double tmp_45 = -tmp_10;
double tmp_46 =  tmp_44+tmp_45;
double tmp_47 = tmp_46*tmp_26;
double tmp_48 =  tmp_30+tmp_25;
double tmp_49 = tmp_38*tmp_48;
double tmp_50 =  tmp_49+tmp_47;
double tmp_51 = tmp_50*tmp_7;
double tmp_52 = tmp_13*tmp_48;
double tmp_53 = -tmp_46*tmp_20;
double tmp_54 =  tmp_52+tmp_53;
double tmp_55 = tmp_54*tmp_4;
double tmp_56 = tmp_38*tmp_20;
double tmp_57 = tmp_13*tmp_26;
double tmp_58 =  tmp_56+tmp_57;
double tmp_59 = x(5);
double tmp_60 =  tmp_59+tmp_3;
double tmp_61 = -tmp_60*tmp_58;
double g0_4 = -( tmp_41*tmp_7-tmp_22*tmp_4+-2.0*tmp_30*tmp_29)/( tmp_55+tmp_51+tmp_61)/2.0-( tmp_4*tmp_13+tmp_38*tmp_7)*( ( tmp_4*tmp_48-tmp_60*tmp_26)*tmp_22+tmp_41*( tmp_60*tmp_20-tmp_7*tmp_48)+( ( tmp_2+tmp_59)*tmp_60+( tmp_30+tmp_16)*tmp_48+tmp_46*( tmp_44+tmp_10))*tmp_29)/const_pow<2,1>(( tmp_55+tmp_51+tmp_61))/2.0;
g(0,4) = g0_4;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 = tmp_4*tmp_8;
double tmp_45 = -tmp_24*tmp_31;
double tmp_46 =  tmp_44+tmp_45;
double tmp_55 =  tmp_1+tmp_2;
double tmp_56 = tmp_4*tmp_55;
double tmp_57 =  tmp_25+tmp_10;
double tmp_58 = tmp_27*tmp_57;
double tmp_59 =  tmp_6+tmp_29;
double tmp_60 = tmp_59*tmp_31;
double tmp_61 =  tmp_58+tmp_56+tmp_60;
double tmp_66 =  tmp_1+tmp_22;
double tmp_67 = tmp_24*tmp_66;
double tmp_68 =  tmp_5+tmp_6;
double tmp_69 = tmp_68*tmp_8;
double tmp_70 =  tmp_14+tmp_10;
double tmp_71 = -tmp_16*tmp_70;
double tmp_72 =  tmp_71+tmp_69+tmp_67;
double g0_5 =  const_pow<2,1>(tmp_42)*tmp_37*( tmp_72*( tmp_39*tmp_31-tmp_4*tmp_18)+tmp_46*( tmp_12*( tmp_9+tmp_10)+tmp_39*( tmp_1+tmp_38)+( tmp_17+tmp_6)*tmp_18)-tmp_61*( tmp_39*tmp_8-tmp_24*tmp_18))/2.0+tmp_42*( 2.0*tmp_46*tmp_38+tmp_72*tmp_31-tmp_61*tmp_8)/2.0;
g(0,5) = g0_5;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_73 = tmp_18*tmp_4;
double tmp_74 = -tmp_39*tmp_31;
double tmp_75 =  tmp_74+tmp_73;
double g0_6 = -tmp_75*( ( tmp_39*tmp_8-tmp_24*tmp_18)*( tmp_31*( tmp_6+tmp_29)+( tmp_1+tmp_2)*tmp_4+tmp_27*( tmp_25+tmp_10))-( tmp_18*( tmp_6+tmp_17)+tmp_12*( tmp_9+tmp_10)+tmp_39*( tmp_1+tmp_38))*( tmp_8*tmp_4-tmp_24*tmp_31)-tmp_75*( tmp_16*( tmp_14+tmp_10)-( tmp_5+tmp_6)*tmp_8-( tmp_1+tmp_22)*tmp_24))*const_pow<2,1>(tmp_42)/2.0-tmp_14*tmp_75*tmp_42;
g(0,6) = g0_6;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_44*tmp_4;
double tmp_46 =  tmp_25+tmp_10;
double tmp_47 = tmp_27*tmp_46;
double tmp_48 =  tmp_6+tmp_29;
double tmp_49 = tmp_31*tmp_48;
double tmp_50 =  tmp_47+tmp_45+tmp_49;
double tmp_52 =  tmp_10+tmp_9;
double tmp_53 = tmp_12*tmp_52;
double tmp_54 =  tmp_38+tmp_1;
double tmp_55 = tmp_54*tmp_39;
double tmp_56 =  tmp_6+tmp_17;
double tmp_57 = tmp_56*tmp_18;
double tmp_58 =  tmp_53+tmp_57+tmp_55;
double tmp_60 = tmp_4*tmp_18;
double tmp_61 = -tmp_31*tmp_39;
double tmp_62 =  tmp_60+tmp_61;
double g0_7 = -1.0/const_pow<2,1>(( tmp_40+tmp_21+tmp_34))*( tmp_12*tmp_4-tmp_39*tmp_27)*( tmp_50*( tmp_24*tmp_18-tmp_39*tmp_8)+( tmp_4*tmp_8-tmp_31*tmp_24)*tmp_58-tmp_62*( tmp_8*( tmp_6+tmp_5)-tmp_16*( tmp_10+tmp_14)+tmp_24*( tmp_22+tmp_1)))/2.0+1.0/( tmp_40+tmp_21+tmp_34)*( tmp_4*tmp_58-tmp_50*tmp_39+-2.0*tmp_5*tmp_62)/2.0;
g(0,7) = g0_7;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_34+tmp_40;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_47 =  tmp_9+tmp_10;
double tmp_48 = tmp_12*tmp_47;
double tmp_49 =  tmp_38+tmp_1;
double tmp_50 = tmp_39*tmp_49;
double tmp_51 =  tmp_6+tmp_17;
double tmp_52 = tmp_51*tmp_18;
double tmp_53 =  tmp_48+tmp_52+tmp_50;
double tmp_55 =  tmp_1+tmp_2;
double tmp_56 = tmp_4*tmp_55;
double tmp_57 =  tmp_25+tmp_10;
double tmp_58 = tmp_57*tmp_27;
double tmp_59 =  tmp_6+tmp_29;
double tmp_60 = tmp_31*tmp_59;
double tmp_61 =  tmp_56+tmp_60+tmp_58;
double tmp_73 = tmp_4*tmp_18;
double tmp_74 = -tmp_31*tmp_39;
double tmp_75 =  tmp_73+tmp_74;
double g0_8 = -tmp_42*( tmp_31*tmp_53-tmp_61*tmp_18+2.0*tmp_22*tmp_75)/2.0+const_pow<2,1>(tmp_42)*tmp_33*( ( tmp_39*tmp_8-tmp_18*tmp_24)*tmp_61-tmp_53*( tmp_4*tmp_8-tmp_31*tmp_24)+( ( tmp_22+tmp_1)*tmp_24+( tmp_6+tmp_5)*tmp_8-tmp_16*( tmp_10+tmp_14))*tmp_75)/2.0;
g(0,8) = g0_8;
}
{
double tmp_1 = x(9);
double tmp_2 = x(2);
double tmp_3 = x(11);
double tmp_4 = -tmp_3;
double tmp_5 =  tmp_4+tmp_2;
double tmp_6 = x(7);
double tmp_7 = x(1);
double tmp_8 = -tmp_7;
double tmp_9 =  tmp_6+tmp_8;
double tmp_10 = x(3);
double tmp_11 = x(0);
double tmp_12 = -tmp_11;
double tmp_13 =  tmp_10+tmp_12;
double tmp_14 = tmp_9*tmp_13;
double tmp_15 = x(6);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_11;
double tmp_18 = x(4);
double tmp_19 =  tmp_8+tmp_18;
double tmp_20 = tmp_19*tmp_17;
double tmp_21 =  tmp_20+tmp_14;
double tmp_22 = tmp_21*tmp_5;
double tmp_23 = x(8);
double tmp_24 = -tmp_2;
double tmp_25 =  tmp_23+tmp_24;
double tmp_26 = -tmp_1;
double tmp_27 =  tmp_26+tmp_11;
double tmp_28 = tmp_19*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_7+tmp_30;
double tmp_32 = -tmp_31*tmp_13;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_33*tmp_25;
double tmp_35 = tmp_31*tmp_17;
double tmp_36 = tmp_9*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_24;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 = tmp_19*tmp_25;
double tmp_45 = -tmp_9*tmp_39;
double tmp_46 =  tmp_44+tmp_45;
double g0_9 = -( ( ( tmp_10+tmp_11)*tmp_13+( tmp_7+tmp_18)*tmp_19+( tmp_38+tmp_2)*tmp_39)*( tmp_31*tmp_25-tmp_9*tmp_5)+( ( tmp_11+tmp_15)*tmp_17-tmp_9*( tmp_6+tmp_7)-tmp_25*( tmp_23+tmp_2))*( tmp_31*tmp_39-tmp_19*tmp_5)-( ( tmp_3+tmp_2)*tmp_5+tmp_31*( tmp_29+tmp_7)+( tmp_1+tmp_11)*tmp_27)*tmp_46)*tmp_46/const_pow<2,1>(( tmp_22+tmp_40+tmp_34))/2.0-tmp_1*tmp_46/( tmp_22+tmp_40+tmp_34);
g(0,9) = g0_9;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_50 =  tmp_9+tmp_10;
double tmp_51 = tmp_12*tmp_50;
double tmp_52 =  tmp_1+tmp_38;
double tmp_53 = tmp_52*tmp_39;
double tmp_54 =  tmp_17+tmp_6;
double tmp_55 = tmp_18*tmp_54;
double tmp_56 =  tmp_55+tmp_53+tmp_51;
double tmp_65 = tmp_24*tmp_18;
double tmp_66 = -tmp_8*tmp_39;
double tmp_67 =  tmp_65+tmp_66;
double tmp_69 =  tmp_1+tmp_22;
double tmp_70 = tmp_24*tmp_69;
double tmp_71 =  tmp_5+tmp_6;
double tmp_72 = tmp_71*tmp_8;
double tmp_73 =  tmp_14+tmp_10;
double tmp_74 = -tmp_73*tmp_16;
double tmp_75 =  tmp_74+tmp_72+tmp_70;
double g0_10 =  ( tmp_24*tmp_56-tmp_75*tmp_39+-2.0*tmp_67*tmp_29)*tmp_42/2.0-( tmp_16*tmp_39+tmp_24*tmp_12)*( tmp_56*( tmp_8*tmp_4-tmp_24*tmp_31)+( ( tmp_1+tmp_2)*tmp_4+tmp_31*( tmp_6+tmp_29)+( tmp_25+tmp_10)*tmp_27)*tmp_67-tmp_75*( tmp_18*tmp_4-tmp_31*tmp_39))*const_pow<2,1>(tmp_42)/2.0;
g(0,10) = g0_10;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_9+tmp_10;
double tmp_45 = tmp_12*tmp_44;
double tmp_46 =  tmp_1+tmp_38;
double tmp_47 = tmp_39*tmp_46;
double tmp_48 =  tmp_17+tmp_6;
double tmp_49 = tmp_18*tmp_48;
double tmp_50 =  tmp_49+tmp_47+tmp_45;
double tmp_52 =  tmp_1+tmp_22;
double tmp_53 = tmp_52*tmp_24;
double tmp_54 =  tmp_5+tmp_6;
double tmp_55 = tmp_8*tmp_54;
double tmp_56 =  tmp_14+tmp_10;
double tmp_57 = -tmp_56*tmp_16;
double tmp_58 =  tmp_55+tmp_53+tmp_57;
double tmp_60 = tmp_18*tmp_24;
double tmp_61 = -tmp_39*tmp_8;
double tmp_62 =  tmp_61+tmp_60;
double g0_11 =  1.0/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( ( tmp_4*( tmp_1+tmp_2)+( tmp_6+tmp_29)*tmp_31+( tmp_25+tmp_10)*tmp_27)*tmp_62+tmp_50*( tmp_4*tmp_8-tmp_24*tmp_31)+tmp_58*( tmp_39*tmp_31-tmp_4*tmp_18))*tmp_20/2.0-( 2.0*tmp_62*tmp_2-tmp_58*tmp_18+tmp_8*tmp_50)/( tmp_21+tmp_40+tmp_34)/2.0;
g(0,11) = g0_11;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_44*tmp_4;
double tmp_46 =  tmp_25+tmp_10;
double tmp_47 = tmp_27*tmp_46;
double tmp_48 =  tmp_6+tmp_29;
double tmp_49 = tmp_31*tmp_48;
double tmp_50 =  tmp_49+tmp_47+tmp_45;
double tmp_55 =  tmp_1+tmp_22;
double tmp_56 = tmp_24*tmp_55;
double tmp_57 =  tmp_5+tmp_6;
double tmp_58 = tmp_8*tmp_57;
double tmp_59 =  tmp_14+tmp_10;
double tmp_60 = -tmp_59*tmp_16;
double tmp_61 =  tmp_56+tmp_60+tmp_58;
double tmp_63 = tmp_16*tmp_4;
double tmp_64 = tmp_27*tmp_24;
double tmp_65 =  tmp_63+tmp_64;
double tmp_67 = tmp_27*tmp_39;
double tmp_68 = -tmp_12*tmp_4;
double tmp_69 =  tmp_68+tmp_67;
double tmp_72 =  tmp_9+tmp_10;
double tmp_73 = tmp_72*tmp_12;
double tmp_74 =  tmp_1+tmp_38;
double tmp_75 = tmp_74*tmp_39;
double tmp_76 =  tmp_6+tmp_17;
double tmp_77 = tmp_18*tmp_76;
double tmp_78 =  tmp_75+tmp_73+tmp_77;
double tmp_80 = tmp_16*tmp_39;
double tmp_81 = tmp_24*tmp_12;
double tmp_82 =  tmp_81+tmp_80;
double g1_0 = -1.0/( tmp_21+tmp_40+tmp_34)*( 2.0*tmp_65*tmp_10+-2.0*tmp_69*tmp_10-tmp_78*( tmp_22+tmp_3)+2.0*tmp_82*tmp_10+tmp_61*( tmp_3+tmp_38)-tmp_50*( tmp_22-tmp_38))/2.0+( tmp_65*tmp_78-tmp_69*tmp_61-tmp_50*tmp_82)/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( ( tmp_5+tmp_30)*tmp_39-( tmp_17+tmp_30)*tmp_24+( tmp_5-tmp_17)*tmp_4)/2.0;
g(1,0) = g1_0;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_34+tmp_21+tmp_40;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 = tmp_39*tmp_27;
double tmp_45 = -tmp_4*tmp_12;
double tmp_46 =  tmp_44+tmp_45;
double tmp_55 = tmp_16*tmp_39;
double tmp_56 = tmp_24*tmp_12;
double tmp_57 =  tmp_55+tmp_56;
double tmp_73 = tmp_16*tmp_4;
double tmp_74 = tmp_27*tmp_24;
double tmp_75 =  tmp_73+tmp_74;
double g1_1 = -( tmp_75*tmp_6+tmp_57*tmp_6-tmp_6*tmp_46)*tmp_42-( ( tmp_9+tmp_15)*tmp_4+tmp_24*( tmp_9+tmp_26)+tmp_39*( tmp_25+tmp_15))*( tmp_57*( tmp_4*( tmp_1+tmp_2)+tmp_27*( tmp_25+tmp_10)+tmp_31*( tmp_6+tmp_29))-tmp_75*( ( tmp_6+tmp_17)*tmp_18+( tmp_38+tmp_1)*tmp_39+( tmp_9+tmp_10)*tmp_12)+tmp_46*( ( tmp_6+tmp_5)*tmp_8+( tmp_22+tmp_1)*tmp_24-tmp_16*( tmp_10+tmp_14)))*const_pow<2,1>(tmp_42)/2.0;
g(1,1) = g1_1;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_45 =  tmp_9+tmp_10;
double tmp_46 = tmp_12*tmp_45;
double tmp_47 =  tmp_38+tmp_1;
double tmp_48 = tmp_47*tmp_39;
double tmp_49 =  tmp_6+tmp_17;
double tmp_50 = tmp_18*tmp_49;
double tmp_51 =  tmp_46+tmp_50+tmp_48;
double tmp_53 = tmp_16*tmp_4;
double tmp_54 = tmp_24*tmp_27;
double tmp_55 =  tmp_53+tmp_54;
double tmp_57 = tmp_16*tmp_39;
double tmp_58 = tmp_24*tmp_12;
double tmp_59 =  tmp_57+tmp_58;
double tmp_62 =  tmp_2+tmp_1;
double tmp_63 = tmp_4*tmp_62;
double tmp_64 =  tmp_25+tmp_10;
double tmp_65 = tmp_64*tmp_27;
double tmp_66 =  tmp_6+tmp_29;
double tmp_67 = tmp_31*tmp_66;
double tmp_68 =  tmp_65+tmp_63+tmp_67;
double tmp_71 =  tmp_22+tmp_1;
double tmp_72 = tmp_24*tmp_71;
double tmp_73 =  tmp_5+tmp_6;
double tmp_74 = tmp_8*tmp_73;
double tmp_75 =  tmp_10+tmp_14;
double tmp_76 = -tmp_75*tmp_16;
double tmp_77 =  tmp_72+tmp_76+tmp_74;
double tmp_79 = tmp_39*tmp_27;
double tmp_80 = -tmp_12*tmp_4;
double tmp_81 =  tmp_79+tmp_80;
double g1_2 = -1.0/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( tmp_28+tmp_32-tmp_8*tmp_12-tmp_18*tmp_16-tmp_31*tmp_16-tmp_8*tmp_27)*( tmp_59*tmp_68-tmp_51*tmp_55+tmp_81*tmp_77)/2.0+( tmp_68*( tmp_15+tmp_9)+( tmp_15+tmp_25)*tmp_51+-2.0*tmp_59*tmp_1+( tmp_9+tmp_26)*tmp_77+-2.0*tmp_55*tmp_1+2.0*tmp_81*tmp_1)/( tmp_21+tmp_40+tmp_34)/2.0;
g(1,2) = g1_2;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_47 =  tmp_1+tmp_22;
double tmp_48 = tmp_24*tmp_47;
double tmp_49 =  tmp_5+tmp_6;
double tmp_50 = tmp_49*tmp_8;
double tmp_51 =  tmp_10+tmp_14;
double tmp_52 = -tmp_16*tmp_51;
double tmp_53 =  tmp_52+tmp_50+tmp_48;
double tmp_58 =  tmp_1+tmp_2;
double tmp_59 = tmp_58*tmp_4;
double tmp_60 =  tmp_10+tmp_25;
double tmp_61 = tmp_27*tmp_60;
double tmp_62 =  tmp_6+tmp_29;
double tmp_63 = tmp_62*tmp_31;
double tmp_64 =  tmp_61+tmp_59+tmp_63;
double tmp_73 = tmp_4*tmp_16;
double tmp_74 = tmp_27*tmp_24;
double tmp_75 =  tmp_74+tmp_73;
double g1_3 =  tmp_42*( 2.0*tmp_75*tmp_9-tmp_24*tmp_64+tmp_4*tmp_53)/2.0+const_pow<2,1>(tmp_42)*( ( ( tmp_17+tmp_6)*tmp_18+( tmp_1+tmp_38)*tmp_39+( tmp_10+tmp_9)*tmp_12)*tmp_75-tmp_53*( tmp_39*tmp_27-tmp_4*tmp_12)-( tmp_39*tmp_16+tmp_24*tmp_12)*tmp_64)*( tmp_24*tmp_31-tmp_4*tmp_8)/2.0;
g(1,3) = g1_3;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_44 = tmp_16*tmp_4;
double tmp_45 = tmp_27*tmp_24;
double tmp_46 =  tmp_45+tmp_44;
double g1_4 =  tmp_17*tmp_46/( tmp_40+tmp_21+tmp_34)+tmp_46/const_pow<2,1>(( tmp_40+tmp_21+tmp_34))*( ( tmp_16*tmp_39+tmp_24*tmp_12)*( ( tmp_6+tmp_29)*tmp_31+tmp_27*( tmp_25+tmp_10)+( tmp_2+tmp_1)*tmp_4)-tmp_46*( tmp_12*( tmp_9+tmp_10)+tmp_18*( tmp_17+tmp_6)+tmp_39*( tmp_38+tmp_1))+( tmp_8*( tmp_5+tmp_6)-( tmp_14+tmp_10)*tmp_16+tmp_24*( tmp_22+tmp_1))*( tmp_27*tmp_39-tmp_12*tmp_4))/2.0;
g(1,4) = g1_4;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_47 =  tmp_22+tmp_1;
double tmp_48 = tmp_24*tmp_47;
double tmp_49 =  tmp_5+tmp_6;
double tmp_50 = tmp_8*tmp_49;
double tmp_51 =  tmp_10+tmp_14;
double tmp_52 = -tmp_16*tmp_51;
double tmp_53 =  tmp_50+tmp_48+tmp_52;
double tmp_58 =  tmp_2+tmp_1;
double tmp_59 = tmp_4*tmp_58;
double tmp_60 =  tmp_25+tmp_10;
double tmp_61 = tmp_27*tmp_60;
double tmp_62 =  tmp_6+tmp_29;
double tmp_63 = tmp_62*tmp_31;
double tmp_64 =  tmp_59+tmp_63+tmp_61;
double tmp_73 = tmp_16*tmp_4;
double tmp_74 = tmp_27*tmp_24;
double tmp_75 =  tmp_73+tmp_74;
double g1_5 =  ( tmp_75*( tmp_12*( tmp_9+tmp_10)+( tmp_38+tmp_1)*tmp_39+tmp_18*( tmp_6+tmp_17))-tmp_53*( tmp_27*tmp_39-tmp_12*tmp_4)-( tmp_16*tmp_39+tmp_24*tmp_12)*tmp_64)*tmp_37*const_pow<2,1>(tmp_42)/2.0+tmp_42*( 2.0*tmp_75*tmp_38-tmp_16*tmp_64-tmp_27*tmp_53)/2.0;
g(1,5) = g1_5;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_21+tmp_34+tmp_40;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 = tmp_39*tmp_27;
double tmp_45 = -tmp_12*tmp_4;
double tmp_46 =  tmp_44+tmp_45;
double tmp_58 =  tmp_1+tmp_2;
double tmp_59 = tmp_58*tmp_4;
double tmp_60 =  tmp_25+tmp_10;
double tmp_61 = tmp_60*tmp_27;
double tmp_62 =  tmp_6+tmp_29;
double tmp_63 = tmp_31*tmp_62;
double tmp_64 =  tmp_59+tmp_63+tmp_61;
double tmp_66 =  tmp_9+tmp_10;
double tmp_67 = tmp_66*tmp_12;
double tmp_68 =  tmp_38+tmp_1;
double tmp_69 = tmp_68*tmp_39;
double tmp_70 =  tmp_6+tmp_17;
double tmp_71 = tmp_18*tmp_70;
double tmp_72 =  tmp_69+tmp_67+tmp_71;
double g1_6 = -tmp_42*( 2.0*tmp_14*tmp_46-tmp_64*tmp_39+tmp_72*tmp_4)/2.0+( ( tmp_12*tmp_24+tmp_16*tmp_39)*tmp_64-tmp_72*( tmp_27*tmp_24+tmp_16*tmp_4)+( ( tmp_22+tmp_1)*tmp_24+tmp_8*( tmp_5+tmp_6)-( tmp_10+tmp_14)*tmp_16)*tmp_46)*( tmp_31*tmp_39-tmp_18*tmp_4)*const_pow<2,1>(tmp_42)/2.0;
g(1,6) = g1_6;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 = tmp_39*tmp_27;
double tmp_45 = -tmp_12*tmp_4;
double tmp_46 =  tmp_44+tmp_45;
double g1_7 = -tmp_46*const_pow<2,1>(tmp_42)*( tmp_46*( ( tmp_6+tmp_5)*tmp_8-( tmp_10+tmp_14)*tmp_16+tmp_24*( tmp_22+tmp_1))-( tmp_27*tmp_24+tmp_16*tmp_4)*( tmp_12*( tmp_10+tmp_9)+( tmp_6+tmp_17)*tmp_18+tmp_39*( tmp_38+tmp_1))+( tmp_4*( tmp_1+tmp_2)+tmp_31*( tmp_6+tmp_29)+( tmp_25+tmp_10)*tmp_27)*( tmp_12*tmp_24+tmp_16*tmp_39))/2.0-tmp_46*tmp_42*tmp_5;
g(1,7) = g1_7;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_4*tmp_44;
double tmp_46 =  tmp_10+tmp_25;
double tmp_47 = tmp_46*tmp_27;
double tmp_48 =  tmp_29+tmp_6;
double tmp_49 = tmp_48*tmp_31;
double tmp_50 =  tmp_45+tmp_49+tmp_47;
double tmp_52 = tmp_39*tmp_27;
double tmp_53 = -tmp_4*tmp_12;
double tmp_54 =  tmp_52+tmp_53;
double tmp_56 =  tmp_10+tmp_9;
double tmp_57 = tmp_56*tmp_12;
double tmp_58 =  tmp_38+tmp_1;
double tmp_59 = tmp_39*tmp_58;
double tmp_60 =  tmp_17+tmp_6;
double tmp_61 = tmp_60*tmp_18;
double tmp_62 =  tmp_61+tmp_59+tmp_57;
double g1_8 = -( ( tmp_24*tmp_27+tmp_16*tmp_4)*tmp_62-( tmp_16*tmp_39+tmp_24*tmp_12)*tmp_50+tmp_54*( tmp_16*( tmp_10+tmp_14)-( tmp_5+tmp_6)*tmp_8-( tmp_1+tmp_22)*tmp_24))*tmp_33/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))/2.0+( tmp_27*tmp_62+-2.0*tmp_54*tmp_22-tmp_50*tmp_12)/( tmp_21+tmp_40+tmp_34)/2.0;
g(1,8) = g1_8;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(8);
double tmp_6 =  tmp_2+tmp_5;
double tmp_7 =  tmp_5+tmp_3;
double tmp_8 = tmp_7*tmp_6;
double tmp_9 = x(7);
double tmp_10 = x(1);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 =  tmp_10+tmp_9;
double tmp_14 = tmp_13*tmp_12;
double tmp_15 = x(0);
double tmp_16 = x(6);
double tmp_17 = -tmp_16;
double tmp_18 =  tmp_17+tmp_15;
double tmp_19 =  tmp_15+tmp_16;
double tmp_20 = -tmp_18*tmp_19;
double tmp_21 =  tmp_20+tmp_14+tmp_8;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_15;
double tmp_25 = -tmp_15;
double tmp_26 =  tmp_23+tmp_25;
double tmp_27 = tmp_26*tmp_24;
double tmp_28 =  tmp_1+tmp_2;
double tmp_29 = tmp_4*tmp_28;
double tmp_30 = x(4);
double tmp_31 =  tmp_10+tmp_30;
double tmp_32 =  tmp_30+tmp_11;
double tmp_33 = tmp_31*tmp_32;
double tmp_34 =  tmp_29+tmp_33+tmp_27;
double tmp_36 = x(9);
double tmp_37 = tmp_4*tmp_18;
double tmp_38 = tmp_26*tmp_7;
double tmp_39 =  tmp_38+tmp_37;
double tmp_42 = x(11);
double tmp_43 = -tmp_42;
double tmp_44 =  tmp_2+tmp_43;
double tmp_45 = tmp_26*tmp_12;
double tmp_46 = tmp_18*tmp_32;
double tmp_47 =  tmp_45+tmp_46;
double tmp_48 = tmp_47*tmp_44;
double tmp_49 = -tmp_36;
double tmp_50 =  tmp_49+tmp_15;
double tmp_51 = tmp_50*tmp_32;
double tmp_52 = x(10);
double tmp_53 = -tmp_52;
double tmp_54 =  tmp_10+tmp_53;
double tmp_55 = -tmp_26*tmp_54;
double tmp_56 =  tmp_51+tmp_55;
double tmp_57 = tmp_7*tmp_56;
double tmp_58 = tmp_18*tmp_54;
double tmp_59 = tmp_50*tmp_12;
double tmp_60 =  tmp_58+tmp_59;
double tmp_61 = -tmp_4*tmp_60;
double g1_9 =  ( tmp_4*tmp_21+2.0*tmp_36*tmp_39-tmp_7*tmp_34)/( tmp_48+tmp_61+tmp_57)/2.0+1.0/const_pow<2,1>(( tmp_48+tmp_61+tmp_57))*( tmp_7*tmp_32-tmp_4*tmp_12)*( ( tmp_18*tmp_44+tmp_7*tmp_50)*tmp_34-( ( tmp_10+tmp_52)*tmp_54+tmp_50*( tmp_36+tmp_15)+tmp_44*( tmp_42+tmp_2))*tmp_39-( tmp_4*tmp_50-tmp_26*tmp_44)*tmp_21)/2.0;
g(1,9) = g1_9;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 = tmp_16*tmp_39;
double tmp_45 = tmp_24*tmp_12;
double tmp_46 =  tmp_45+tmp_44;
double g1_10 =  ( ( tmp_31*( tmp_6+tmp_29)+( tmp_25+tmp_10)*tmp_27+( tmp_2+tmp_1)*tmp_4)*tmp_46-( tmp_8*( tmp_5+tmp_6)+( tmp_22+tmp_1)*tmp_24-( tmp_14+tmp_10)*tmp_16)*( tmp_12*tmp_4-tmp_27*tmp_39)-( tmp_16*tmp_4+tmp_27*tmp_24)*( tmp_12*( tmp_9+tmp_10)+( tmp_38+tmp_1)*tmp_39+tmp_18*( tmp_17+tmp_6)))*tmp_46*const_pow<2,1>(tmp_42)/2.0+tmp_46*tmp_29*tmp_42;
g(1,10) = g1_10;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_37*tmp_39;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_47 =  tmp_22+tmp_1;
double tmp_48 = tmp_24*tmp_47;
double tmp_49 =  tmp_5+tmp_6;
double tmp_50 = tmp_8*tmp_49;
double tmp_51 =  tmp_10+tmp_14;
double tmp_52 = -tmp_16*tmp_51;
double tmp_53 =  tmp_50+tmp_48+tmp_52;
double tmp_55 = tmp_16*tmp_39;
double tmp_56 = tmp_24*tmp_12;
double tmp_57 =  tmp_56+tmp_55;
double tmp_66 =  tmp_9+tmp_10;
double tmp_67 = tmp_12*tmp_66;
double tmp_68 =  tmp_38+tmp_1;
double tmp_69 = tmp_68*tmp_39;
double tmp_70 =  tmp_6+tmp_17;
double tmp_71 = tmp_18*tmp_70;
double tmp_72 =  tmp_69+tmp_67+tmp_71;
double g1_11 = -( tmp_53*( tmp_39*tmp_27-tmp_12*tmp_4)+tmp_57*( ( tmp_25+tmp_10)*tmp_27+( tmp_2+tmp_1)*tmp_4+( tmp_6+tmp_29)*tmp_31)-( tmp_24*tmp_27+tmp_16*tmp_4)*tmp_72)*tmp_20*const_pow<2,1>(tmp_42)/2.0-tmp_42*( tmp_53*tmp_12+-2.0*tmp_2*tmp_57+tmp_72*tmp_16)/2.0;
g(1,11) = g1_11;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_34+tmp_40;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 =  tmp_17+tmp_30;
double tmp_46 = -tmp_17;
double tmp_47 =  tmp_5+tmp_46;
double tmp_49 =  tmp_30+tmp_5;
double tmp_52 =  tmp_1+tmp_2;
double tmp_53 = tmp_4*tmp_52;
double tmp_54 =  tmp_25+tmp_10;
double tmp_55 = tmp_54*tmp_27;
double tmp_56 =  tmp_6+tmp_29;
double tmp_57 = tmp_56*tmp_31;
double tmp_58 =  tmp_53+tmp_57+tmp_55;
double tmp_60 =  tmp_9+tmp_10;
double tmp_61 = tmp_12*tmp_60;
double tmp_62 =  tmp_38+tmp_1;
double tmp_63 = tmp_39*tmp_62;
double tmp_64 =  tmp_6+tmp_17;
double tmp_65 = tmp_18*tmp_64;
double tmp_66 =  tmp_63+tmp_61+tmp_65;
double tmp_68 =  tmp_22+tmp_1;
double tmp_69 = tmp_68*tmp_24;
double tmp_70 =  tmp_6+tmp_5;
double tmp_71 = tmp_8*tmp_70;
double tmp_72 =  tmp_10+tmp_14;
double tmp_73 = -tmp_72*tmp_16;
double tmp_74 =  tmp_69+tmp_73+tmp_71;
double g2_0 = -tmp_42*( tmp_47*tmp_58+tmp_66*tmp_49+-2.0*tmp_10*tmp_37-tmp_44*tmp_74+-2.0*tmp_10*tmp_20+2.0*tmp_10*tmp_33)/2.0-( tmp_47*tmp_4+tmp_39*tmp_49-tmp_44*tmp_24)*const_pow<2,1>(tmp_42)*( tmp_66*tmp_37-tmp_33*tmp_74-tmp_58*tmp_20)/2.0;
g(2,0) = g2_0;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_15+tmp_25;
double tmp_45 =  tmp_9+tmp_10;
double tmp_46 = tmp_45*tmp_12;
double tmp_47 =  tmp_1+tmp_38;
double tmp_48 = tmp_39*tmp_47;
double tmp_49 =  tmp_17+tmp_6;
double tmp_50 = tmp_18*tmp_49;
double tmp_51 =  tmp_46+tmp_48+tmp_50;
double tmp_54 =  tmp_15+tmp_9;
double tmp_55 =  tmp_1+tmp_2;
double tmp_56 = tmp_4*tmp_55;
double tmp_57 =  tmp_25+tmp_10;
double tmp_58 = tmp_57*tmp_27;
double tmp_59 =  tmp_29+tmp_6;
double tmp_60 = tmp_31*tmp_59;
double tmp_61 =  tmp_60+tmp_58+tmp_56;
double tmp_63 =  tmp_26+tmp_9;
double tmp_64 =  tmp_1+tmp_22;
double tmp_65 = tmp_64*tmp_24;
double tmp_66 =  tmp_5+tmp_6;
double tmp_67 = tmp_8*tmp_66;
double tmp_68 =  tmp_14+tmp_10;
double tmp_69 = -tmp_16*tmp_68;
double tmp_70 =  tmp_67+tmp_65+tmp_69;
double g2_1 =  ( tmp_70*tmp_33-tmp_51*tmp_37+tmp_20*tmp_61)*( tmp_4*tmp_54+tmp_63*tmp_24+tmp_39*tmp_44)/const_pow<2,1>(( tmp_40+tmp_21+tmp_34))/2.0-1.0/( tmp_40+tmp_21+tmp_34)*( tmp_63*tmp_70+2.0*tmp_33*tmp_6+tmp_51*tmp_44+-2.0*tmp_20*tmp_6+-2.0*tmp_37*tmp_6+tmp_54*tmp_61)/2.0;
g(2,1) = g2_1;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_9+tmp_11;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_34+tmp_21+tmp_40;
double tmp_42 = const_pow<-1,1>(tmp_41);
double g2_2 =  ( tmp_20*tmp_1+tmp_1*tmp_37-tmp_1*tmp_33)*tmp_42-( ( tmp_12*( tmp_9+tmp_10)+( tmp_6+tmp_17)*tmp_18+( tmp_38+tmp_1)*tmp_39)*tmp_37-( tmp_27*( tmp_25+tmp_10)+tmp_31*( tmp_6+tmp_29)+( tmp_1+tmp_2)*tmp_4)*tmp_20-tmp_33*( tmp_24*( tmp_22+tmp_1)+( tmp_6+tmp_5)*tmp_8-tmp_16*( tmp_10+tmp_14)))*const_pow<2,1>(tmp_42)*( tmp_28-tmp_31*tmp_16+tmp_32-tmp_16*tmp_18-tmp_8*tmp_27-tmp_12*tmp_8)/2.0;
g(2,2) = g2_2;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_4*tmp_44;
double tmp_46 =  tmp_10+tmp_25;
double tmp_47 = tmp_27*tmp_46;
double tmp_48 =  tmp_6+tmp_29;
double tmp_49 = tmp_48*tmp_31;
double tmp_50 =  tmp_45+tmp_49+tmp_47;
double tmp_60 =  tmp_1+tmp_22;
double tmp_61 = tmp_24*tmp_60;
double tmp_62 =  tmp_5+tmp_6;
double tmp_63 = tmp_8*tmp_62;
double tmp_64 =  tmp_10+tmp_14;
double tmp_65 = -tmp_64*tmp_16;
double tmp_66 =  tmp_61+tmp_65+tmp_63;
double g2_3 =  tmp_42*( tmp_8*tmp_50+-2.0*tmp_37*tmp_9-tmp_31*tmp_66)/2.0-const_pow<2,1>(tmp_42)*( tmp_37*( tmp_12*( tmp_10+tmp_9)+( tmp_17+tmp_6)*tmp_18+tmp_39*( tmp_1+tmp_38))-tmp_20*tmp_50-tmp_33*tmp_66)*( tmp_24*tmp_31-tmp_4*tmp_8)/2.0;
g(2,3) = g2_3;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_1+tmp_22;
double tmp_45 = tmp_24*tmp_44;
double tmp_46 =  tmp_5+tmp_6;
double tmp_47 = tmp_46*tmp_8;
double tmp_48 =  tmp_14+tmp_10;
double tmp_49 = -tmp_16*tmp_48;
double tmp_50 =  tmp_45+tmp_49+tmp_47;
double tmp_52 =  tmp_1+tmp_2;
double tmp_53 = tmp_4*tmp_52;
double tmp_54 =  tmp_25+tmp_10;
double tmp_55 = tmp_27*tmp_54;
double tmp_56 =  tmp_29+tmp_6;
double tmp_57 = tmp_56*tmp_31;
double tmp_58 =  tmp_55+tmp_53+tmp_57;
double g2_4 =  ( tmp_58*tmp_16+tmp_27*tmp_50+-2.0*tmp_17*tmp_37)/( tmp_21+tmp_40+tmp_34)/2.0-( tmp_20*tmp_58+tmp_33*tmp_50-tmp_37*( tmp_39*( tmp_1+tmp_38)+( tmp_9+tmp_10)*tmp_12+tmp_18*( tmp_17+tmp_6)))/const_pow<2,1>(( tmp_21+tmp_40+tmp_34))*( tmp_4*tmp_16+tmp_24*tmp_27)/2.0;
g(2,4) = g2_4;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_12*tmp_8;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_40+tmp_21+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double g2_5 = -tmp_38*tmp_42*tmp_37-const_pow<2,1>(tmp_42)*( ( tmp_16*( tmp_10+tmp_14)-( tmp_5+tmp_6)*tmp_8-( tmp_22+tmp_1)*tmp_24)*tmp_33+( tmp_39*( tmp_38+tmp_1)+( tmp_17+tmp_6)*tmp_18+tmp_12*( tmp_10+tmp_9))*tmp_37-( ( tmp_25+tmp_10)*tmp_27+tmp_4*( tmp_1+tmp_2)+( tmp_29+tmp_6)*tmp_31)*tmp_20)*tmp_37/2.0;
g(2,5) = g2_5;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_45 =  tmp_10+tmp_9;
double tmp_46 = tmp_45*tmp_12;
double tmp_47 =  tmp_1+tmp_38;
double tmp_48 = tmp_39*tmp_47;
double tmp_49 =  tmp_17+tmp_6;
double tmp_50 = tmp_49*tmp_18;
double tmp_51 =  tmp_48+tmp_46+tmp_50;
double tmp_53 =  tmp_1+tmp_2;
double tmp_54 = tmp_4*tmp_53;
double tmp_55 =  tmp_10+tmp_25;
double tmp_56 = tmp_55*tmp_27;
double tmp_57 =  tmp_6+tmp_29;
double tmp_58 = tmp_31*tmp_57;
double tmp_59 =  tmp_58+tmp_56+tmp_54;
double g2_6 =  1.0/( tmp_21+tmp_34+tmp_40)*( 2.0*tmp_33*tmp_14-tmp_59*tmp_18+tmp_31*tmp_51)/2.0+( tmp_39*tmp_31-tmp_4*tmp_18)/const_pow<2,1>(( tmp_21+tmp_34+tmp_40))*( tmp_37*tmp_51-tmp_20*tmp_59-( tmp_24*( tmp_1+tmp_22)+tmp_8*( tmp_5+tmp_6)-( tmp_10+tmp_14)*tmp_16)*tmp_33)/2.0;
g(2,6) = g2_6;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_18*tmp_27;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_44 =  tmp_1+tmp_2;
double tmp_45 = tmp_4*tmp_44;
double tmp_46 =  tmp_25+tmp_10;
double tmp_47 = tmp_46*tmp_27;
double tmp_48 =  tmp_29+tmp_6;
double tmp_49 = tmp_31*tmp_48;
double tmp_50 =  tmp_45+tmp_49+tmp_47;
double tmp_53 =  tmp_9+tmp_10;
double tmp_54 = tmp_12*tmp_53;
double tmp_55 =  tmp_1+tmp_38;
double tmp_56 = tmp_39*tmp_55;
double tmp_57 =  tmp_17+tmp_6;
double tmp_58 = tmp_18*tmp_57;
double tmp_59 =  tmp_54+tmp_58+tmp_56;
double g2_7 =  ( ( ( tmp_14+tmp_10)*tmp_16-tmp_8*( tmp_5+tmp_6)-( tmp_1+tmp_22)*tmp_24)*tmp_33-tmp_20*tmp_50+tmp_37*tmp_59)*( tmp_4*tmp_12-tmp_39*tmp_27)/const_pow<2,1>(( tmp_40+tmp_21+tmp_34))/2.0+1.0/( tmp_40+tmp_21+tmp_34)*( tmp_50*tmp_12-tmp_27*tmp_59+2.0*tmp_33*tmp_5)/2.0;
g(2,7) = g2_7;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_10+tmp_15;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_16*tmp_18;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_6+tmp_30;
double tmp_32 = -tmp_31*tmp_12;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double g2_8 = -1.0/const_pow<2,1>(( tmp_21+tmp_34+tmp_40))*tmp_33*( tmp_20*( ( tmp_1+tmp_2)*tmp_4+( tmp_6+tmp_29)*tmp_31+tmp_27*( tmp_10+tmp_25))+tmp_33*( tmp_24*( tmp_1+tmp_22)+( tmp_6+tmp_5)*tmp_8-tmp_16*( tmp_10+tmp_14))-( tmp_18*( tmp_6+tmp_17)+tmp_12*( tmp_10+tmp_9)+tmp_39*( tmp_1+tmp_38))*tmp_37)/2.0+1.0/( tmp_21+tmp_34+tmp_40)*tmp_33*tmp_22;
g(2,8) = g2_8;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_7+tmp_17;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_38+tmp_23;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double tmp_52 =  tmp_9+tmp_10;
double tmp_53 = tmp_52*tmp_12;
double tmp_54 =  tmp_1+tmp_38;
double tmp_55 = tmp_39*tmp_54;
double tmp_56 =  tmp_17+tmp_6;
double tmp_57 = tmp_56*tmp_18;
double tmp_58 =  tmp_55+tmp_53+tmp_57;
double tmp_60 =  tmp_1+tmp_22;
double tmp_61 = tmp_24*tmp_60;
double tmp_62 =  tmp_5+tmp_6;
double tmp_63 = tmp_8*tmp_62;
double tmp_64 =  tmp_14+tmp_10;
double tmp_65 = -tmp_64*tmp_16;
double tmp_66 =  tmp_61+tmp_65+tmp_63;
double g2_9 = -tmp_42*( 2.0*tmp_20*tmp_25+tmp_18*tmp_66-tmp_58*tmp_8)/2.0-const_pow<2,1>(tmp_42)*( tmp_39*tmp_8-tmp_24*tmp_18)*( tmp_33*tmp_66-tmp_58*tmp_37+tmp_20*( ( tmp_29+tmp_6)*tmp_31+tmp_4*( tmp_1+tmp_2)+tmp_27*( tmp_25+tmp_10)))/2.0;
g(2,9) = g2_9;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_4;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_23+tmp_22;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_10+tmp_26;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_28+tmp_32;
double tmp_34 = tmp_33*tmp_24;
double tmp_35 = tmp_31*tmp_16;
double tmp_36 = tmp_8*tmp_27;
double tmp_37 =  tmp_36+tmp_35;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_37*tmp_39;
double tmp_44 =  tmp_9+tmp_10;
double tmp_45 = tmp_12*tmp_44;
double tmp_46 =  tmp_1+tmp_38;
double tmp_47 = tmp_46*tmp_39;
double tmp_48 =  tmp_17+tmp_6;
double tmp_49 = tmp_48*tmp_18;
double tmp_50 =  tmp_49+tmp_47+tmp_45;
double tmp_53 =  tmp_1+tmp_22;
double tmp_54 = tmp_24*tmp_53;
double tmp_55 =  tmp_5+tmp_6;
double tmp_56 = tmp_55*tmp_8;
double tmp_57 =  tmp_14+tmp_10;
double tmp_58 = -tmp_57*tmp_16;
double tmp_59 =  tmp_58+tmp_56+tmp_54;
double g2_10 = -( tmp_16*tmp_39+tmp_24*tmp_12)/const_pow<2,1>(( tmp_40+tmp_21+tmp_34))*( tmp_33*tmp_59-tmp_37*tmp_50+tmp_20*( tmp_31*( tmp_6+tmp_29)+( tmp_1+tmp_2)*tmp_4+( tmp_25+tmp_10)*tmp_27))/2.0-( 2.0*tmp_20*tmp_29-tmp_59*tmp_12-tmp_50*tmp_16)/( tmp_40+tmp_21+tmp_34)/2.0;
g(2,10) = g2_10;
}
{
double tmp_1 = x(2);
double tmp_2 = x(11);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = x(1);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = x(3);
double tmp_10 = x(0);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_11+tmp_9;
double tmp_13 = tmp_8*tmp_12;
double tmp_14 = x(6);
double tmp_15 = -tmp_14;
double tmp_16 =  tmp_15+tmp_10;
double tmp_17 = x(4);
double tmp_18 =  tmp_17+tmp_7;
double tmp_19 = tmp_18*tmp_16;
double tmp_20 =  tmp_19+tmp_13;
double tmp_21 = tmp_4*tmp_20;
double tmp_22 = x(8);
double tmp_23 = -tmp_1;
double tmp_24 =  tmp_22+tmp_23;
double tmp_25 = x(9);
double tmp_26 = -tmp_25;
double tmp_27 =  tmp_26+tmp_10;
double tmp_28 = tmp_27*tmp_18;
double tmp_29 = x(10);
double tmp_30 = -tmp_29;
double tmp_31 =  tmp_30+tmp_6;
double tmp_32 = -tmp_12*tmp_31;
double tmp_33 =  tmp_32+tmp_28;
double tmp_34 = tmp_24*tmp_33;
double tmp_35 = tmp_16*tmp_31;
double tmp_36 = tmp_27*tmp_8;
double tmp_37 =  tmp_35+tmp_36;
double tmp_38 = x(5);
double tmp_39 =  tmp_23+tmp_38;
double tmp_40 = -tmp_39*tmp_37;
double tmp_41 =  tmp_21+tmp_40+tmp_34;
double tmp_42 = const_pow<-1,1>(tmp_41);
double g2_11 = -tmp_42*tmp_2*tmp_20-const_pow<2,1>(tmp_42)*( ( tmp_39*( tmp_1+tmp_38)+tmp_12*( tmp_9+tmp_10)+tmp_18*( tmp_17+tmp_6))*tmp_37-tmp_33*( tmp_24*( tmp_1+tmp_22)+( tmp_5+tmp_6)*tmp_8-( tmp_14+tmp_10)*tmp_16)-( tmp_4*( tmp_1+tmp_2)+tmp_27*( tmp_25+tmp_10)+( tmp_6+tmp_29)*tmp_31)*tmp_20)*tmp_20/2.0;
g(2,11) = g2_11;
}
      }
   }
}
