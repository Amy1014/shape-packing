#include "L.h"
#include <Geex/symbolics/const_pow.h>
namespace Geex {
   L::L() : Function(1,12,0){}
   void L::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_12+tmp_7;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_16+tmp_18;
double tmp_21 = x(11);
double tmp_22 =  tmp_3+tmp_21;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_16+tmp_24;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_28+tmp_16;
double tmp_36 = x(9);
double tmp_37 =  tmp_36+tmp_7;
double f0 = (1.0/60.0)*( tmp_22*( tmp_25*tmp_8-tmp_29*tmp_13)+( tmp_13*tmp_11-tmp_4*tmp_8)*tmp_19-( tmp_25*tmp_11-tmp_29*tmp_4)*tmp_37)*( const_pow<2,1>(tmp_4)+const_pow<2,1>(tmp_13)+tmp_22*tmp_4+const_pow<2,1>(tmp_11)+const_pow<2,1>(tmp_19)+tmp_4*tmp_11+const_pow<2,1>(tmp_29)+tmp_13*tmp_37+tmp_22*tmp_11+const_pow<2,1>(tmp_37)+tmp_13*tmp_8+const_pow<2,1>(tmp_8)+tmp_25*tmp_29+const_pow<2,1>(tmp_22)+tmp_37*tmp_8+tmp_25*tmp_19+const_pow<2,1>(tmp_25)+tmp_19*tmp_29);
f(0) = f0;
}
      }
      if(do_g) {
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 =  tmp_10+tmp_3;
double tmp_12 = x(3);
double tmp_13 =  tmp_7+tmp_12;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(11);
double tmp_22 =  tmp_21+tmp_3;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_24+tmp_16;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_28+tmp_16;
double tmp_36 = x(9);
double tmp_37 =  tmp_7+tmp_36;
double g0_0 =  ( tmp_36+tmp_5+tmp_12+-3.0*tmp_6)*( ( tmp_4*tmp_8-tmp_13*tmp_11)*tmp_19-( tmp_29*tmp_4-tmp_25*tmp_11)*tmp_37-tmp_22*( tmp_25*tmp_8-tmp_13*tmp_29))/15.0-( const_pow<2,1>(tmp_19)+tmp_13*tmp_8+tmp_8*tmp_37+const_pow<2,1>(tmp_11)+tmp_25*tmp_29+const_pow<2,1>(tmp_4)+tmp_13*tmp_37+tmp_29*tmp_19+tmp_25*tmp_19+tmp_22*tmp_4+tmp_4*tmp_11+const_pow<2,1>(tmp_37)+const_pow<2,1>(tmp_29)+const_pow<2,1>(tmp_8)+const_pow<2,1>(tmp_25)+const_pow<2,1>(tmp_13)+const_pow<2,1>(tmp_22)+tmp_22*tmp_11)*( tmp_19*( tmp_10-tmp_1)+tmp_29*tmp_4+( tmp_27+tmp_24)*tmp_22-tmp_25*tmp_11)/60.0;
g(0,0) = g0_0;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_9 = tmp_8*tmp_4;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_12+tmp_7;
double tmp_14 = -tmp_11*tmp_13;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(11);
double tmp_22 =  tmp_21+tmp_3;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_24+tmp_16;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_28+tmp_16;
double tmp_36 = x(9);
double tmp_37 =  tmp_36+tmp_7;
double g0_1 = -( ( tmp_11*tmp_25-tmp_29*tmp_4)*tmp_37+( tmp_9+tmp_14)*tmp_19+( tmp_13*tmp_29-tmp_8*tmp_25)*tmp_22)*( tmp_18+tmp_24+tmp_28+3.0*tmp_16)/15.0-( const_pow<2,1>(tmp_4)+tmp_22*tmp_4+tmp_11*tmp_22+tmp_37*tmp_13+const_pow<2,1>(tmp_29)+const_pow<2,1>(tmp_37)+tmp_8*tmp_37+tmp_19*tmp_25+tmp_8*tmp_13+const_pow<2,1>(tmp_8)+tmp_25*tmp_29+const_pow<2,1>(tmp_22)+const_pow<2,1>(tmp_13)+tmp_11*tmp_4+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_11)+tmp_19*tmp_29+const_pow<2,1>(tmp_25))*( tmp_9-tmp_22*( tmp_5-tmp_12)+tmp_37*( tmp_10-tmp_1)+tmp_14)/60.0;
g(0,1) = g0_1;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_12+tmp_7;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_16+tmp_18;
double tmp_21 = x(11);
double tmp_22 =  tmp_3+tmp_21;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_16+tmp_24;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_28+tmp_16;
double tmp_36 = x(9);
double tmp_37 =  tmp_7+tmp_36;
double g0_2 = -( tmp_10+tmp_1+tmp_21+-3.0*tmp_2)*( tmp_19*( tmp_13*tmp_11-tmp_4*tmp_8)-( tmp_25*tmp_11-tmp_29*tmp_4)*tmp_37+tmp_22*( tmp_25*tmp_8-tmp_13*tmp_29))/15.0-( tmp_4*tmp_11+tmp_19*tmp_29+const_pow<2,1>(tmp_37)+tmp_22*tmp_4+const_pow<2,1>(tmp_29)+const_pow<2,1>(tmp_8)+const_pow<2,1>(tmp_25)+tmp_22*tmp_11+tmp_19*tmp_25+const_pow<2,1>(tmp_13)+tmp_13*tmp_8+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_11)+tmp_8*tmp_37+tmp_25*tmp_29+const_pow<2,1>(tmp_4)+tmp_13*tmp_37+const_pow<2,1>(tmp_22))*( tmp_19*( tmp_12-tmp_5)-( tmp_24+tmp_27)*tmp_37+tmp_25*tmp_8-tmp_13*tmp_29)/60.0;
g(0,2) = g0_2;
}
{
double tmp_1 = x(1);
double tmp_2 = x(4);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(8);
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = x(11);
double tmp_12 =  tmp_7+tmp_11;
double tmp_14 = x(3);
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = x(6);
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(10);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_1+tmp_22;
double tmp_26 = x(9);
double tmp_27 =  tmp_16+tmp_26;
double tmp_30 = x(7);
double tmp_31 = -tmp_30;
double tmp_32 =  tmp_1+tmp_31;
double g0_3 = -( tmp_32*tmp_12-tmp_23*tmp_10)*( tmp_17*tmp_27+tmp_23*tmp_4+tmp_32*tmp_4+const_pow<2,1>(tmp_8)+tmp_8*tmp_10+const_pow<2,1>(tmp_10)+tmp_27*tmp_19+const_pow<2,1>(tmp_27)+const_pow<2,1>(tmp_19)+tmp_23*tmp_32+tmp_17*tmp_19+const_pow<2,1>(tmp_4)+const_pow<2,1>(tmp_17)+const_pow<2,1>(tmp_23)+const_pow<2,1>(tmp_32)+tmp_12*tmp_10+tmp_8*tmp_12+const_pow<2,1>(tmp_12))/60.0-( ( tmp_32*tmp_17-tmp_4*tmp_19)*tmp_12+( tmp_4*tmp_10-tmp_32*tmp_8)*tmp_27-tmp_23*( tmp_17*tmp_10-tmp_8*tmp_19))*( 2.0*tmp_14+tmp_18+-4.0*tmp_15+tmp_26)/60.0;
g(0,3) = g0_3;
}
{
double tmp_1 = x(11);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(9);
double tmp_13 =  tmp_7+tmp_12;
double tmp_16 = x(1);
double tmp_17 = x(4);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_16+tmp_18;
double tmp_20 = x(5);
double tmp_21 =  tmp_3+tmp_20;
double tmp_23 = x(3);
double tmp_24 =  tmp_23+tmp_7;
double tmp_26 = x(10);
double tmp_27 = -tmp_26;
double tmp_28 =  tmp_16+tmp_27;
double tmp_33 = x(7);
double tmp_34 = -tmp_33;
double tmp_35 =  tmp_34+tmp_16;
double g0_4 =  ( tmp_4*tmp_11+const_pow<2,1>(tmp_28)+tmp_24*tmp_8+tmp_19*tmp_28+tmp_13*tmp_24+const_pow<2,1>(tmp_21)+const_pow<2,1>(tmp_8)+const_pow<2,1>(tmp_13)+tmp_19*tmp_35+tmp_11*tmp_21+const_pow<2,1>(tmp_35)+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_11)+const_pow<2,1>(tmp_24)+tmp_35*tmp_28+const_pow<2,1>(tmp_4)+tmp_4*tmp_21+tmp_13*tmp_8)*( tmp_13*tmp_11-tmp_4*tmp_8)/60.0+( tmp_34+4.0*tmp_16+-2.0*tmp_17+tmp_27)*( tmp_13*( tmp_19*tmp_11-tmp_35*tmp_21)-( tmp_19*tmp_8-tmp_35*tmp_24)*tmp_4-( tmp_11*tmp_24-tmp_8*tmp_21)*tmp_28)/60.0;
g(0,4) = g0_4;
}
{
double tmp_1 = x(1);
double tmp_2 = x(4);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(8);
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = x(11);
double tmp_12 =  tmp_11+tmp_7;
double tmp_14 = x(3);
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = x(6);
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(10);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_22+tmp_1;
double tmp_26 = x(9);
double tmp_27 =  tmp_16+tmp_26;
double tmp_30 = x(7);
double tmp_31 = -tmp_30;
double tmp_32 =  tmp_31+tmp_1;
double g0_5 =  ( tmp_32*tmp_27-tmp_19*tmp_23)*( const_pow<2,1>(tmp_17)+tmp_32*tmp_4+tmp_17*tmp_27+const_pow<2,1>(tmp_27)+tmp_12*tmp_10+const_pow<2,1>(tmp_23)+tmp_8*tmp_10+tmp_4*tmp_23+const_pow<2,1>(tmp_12)+tmp_19*tmp_17+tmp_8*tmp_12+const_pow<2,1>(tmp_4)+const_pow<2,1>(tmp_10)+tmp_19*tmp_27+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_32)+const_pow<2,1>(tmp_8)+tmp_32*tmp_23)/60.0+( ( tmp_8*tmp_32-tmp_4*tmp_10)*tmp_27-( tmp_8*tmp_19-tmp_10*tmp_17)*tmp_23+tmp_12*( tmp_19*tmp_4-tmp_32*tmp_17))*( tmp_11+-4.0*tmp_6+tmp_9+2.0*tmp_5)/60.0;
g(0,5) = g0_5;
}
{
double tmp_1 = x(1);
double tmp_2 = x(4);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(11);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(10);
double tmp_11 = -tmp_10;
double tmp_12 =  tmp_1+tmp_11;
double tmp_13 = x(5);
double tmp_14 =  tmp_13+tmp_7;
double tmp_17 = x(8);
double tmp_18 =  tmp_17+tmp_7;
double tmp_20 = x(3);
double tmp_21 = x(0);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_22+tmp_20;
double tmp_24 = x(6);
double tmp_25 =  tmp_22+tmp_24;
double tmp_29 = x(9);
double tmp_30 =  tmp_22+tmp_29;
double tmp_33 = x(7);
double tmp_34 = -tmp_33;
double tmp_35 =  tmp_1+tmp_34;
double g0_6 =  ( tmp_29+tmp_20+2.0*tmp_24+-4.0*tmp_21)*( tmp_30*( tmp_35*tmp_14-tmp_4*tmp_18)-tmp_12*( tmp_14*tmp_25-tmp_23*tmp_18)+tmp_8*( tmp_4*tmp_25-tmp_35*tmp_23))/60.0-( tmp_12*tmp_14-tmp_4*tmp_8)*( tmp_23*tmp_30+const_pow<2,1>(tmp_25)+tmp_8*tmp_14+const_pow<2,1>(tmp_8)+tmp_4*tmp_12+tmp_4*tmp_35+const_pow<2,1>(tmp_18)+const_pow<2,1>(tmp_23)+tmp_35*tmp_12+tmp_30*tmp_25+const_pow<2,1>(tmp_4)+tmp_8*tmp_18+const_pow<2,1>(tmp_12)+const_pow<2,1>(tmp_30)+const_pow<2,1>(tmp_14)+const_pow<2,1>(tmp_35)+tmp_23*tmp_25+tmp_14*tmp_18)/60.0;
g(0,6) = g0_6;
}
{
double tmp_1 = x(1);
double tmp_2 = x(4);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(8);
double tmp_10 =  tmp_9+tmp_7;
double tmp_11 = x(11);
double tmp_12 =  tmp_7+tmp_11;
double tmp_14 = x(3);
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_16+tmp_14;
double tmp_18 = x(6);
double tmp_19 =  tmp_16+tmp_18;
double tmp_21 = x(10);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_22+tmp_1;
double tmp_26 = x(9);
double tmp_27 =  tmp_16+tmp_26;
double tmp_30 = x(7);
double tmp_31 = -tmp_30;
double tmp_32 =  tmp_31+tmp_1;
double g0_7 =  ( tmp_10*tmp_8+const_pow<2,1>(tmp_27)+const_pow<2,1>(tmp_32)+tmp_17*tmp_27+const_pow<2,1>(tmp_10)+const_pow<2,1>(tmp_19)+tmp_4*tmp_23+tmp_19*tmp_27+const_pow<2,1>(tmp_8)+const_pow<2,1>(tmp_17)+tmp_32*tmp_4+const_pow<2,1>(tmp_23)+tmp_12*tmp_8+tmp_32*tmp_23+const_pow<2,1>(tmp_12)+tmp_19*tmp_17+const_pow<2,1>(tmp_4)+tmp_12*tmp_10)*( tmp_12*tmp_17-tmp_8*tmp_27)/60.0-( tmp_12*( tmp_19*tmp_4-tmp_32*tmp_17)-( tmp_19*tmp_8-tmp_10*tmp_17)*tmp_23+( tmp_32*tmp_8-tmp_10*tmp_4)*tmp_27)*( tmp_3+tmp_22+4.0*tmp_1+-2.0*tmp_30)/60.0;
g(0,7) = g0_7;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_5+tmp_7;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_12+tmp_7;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(11);
double tmp_22 =  tmp_21+tmp_3;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_24+tmp_16;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_28+tmp_16;
double tmp_36 = x(9);
double tmp_37 =  tmp_36+tmp_7;
double g0_8 =  ( tmp_1+tmp_21+-4.0*tmp_2+2.0*tmp_10)*( ( tmp_11*tmp_13-tmp_8*tmp_4)*tmp_19+tmp_37*( tmp_29*tmp_4-tmp_11*tmp_25)-( tmp_13*tmp_29-tmp_8*tmp_25)*tmp_22)/60.0-( tmp_37*tmp_25-tmp_19*tmp_13)*( const_pow<2,1>(tmp_37)+const_pow<2,1>(tmp_29)+tmp_11*tmp_4+tmp_8*tmp_13+const_pow<2,1>(tmp_4)+tmp_25*tmp_29+tmp_37*tmp_13+const_pow<2,1>(tmp_13)+tmp_19*tmp_25+tmp_8*tmp_37+const_pow<2,1>(tmp_11)+tmp_22*tmp_4+const_pow<2,1>(tmp_25)+const_pow<2,1>(tmp_8)+tmp_11*tmp_22+const_pow<2,1>(tmp_22)+const_pow<2,1>(tmp_19)+tmp_19*tmp_29)/60.0;
g(0,8) = g0_8;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_7+tmp_12;
double tmp_16 = x(1);
double tmp_17 = x(10);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_16+tmp_18;
double tmp_21 = x(11);
double tmp_22 =  tmp_3+tmp_21;
double tmp_23 = x(4);
double tmp_24 = -tmp_23;
double tmp_25 =  tmp_16+tmp_24;
double tmp_27 = x(7);
double tmp_28 = -tmp_27;
double tmp_29 =  tmp_16+tmp_28;
double tmp_33 = tmp_11*tmp_25;
double tmp_34 = -tmp_29*tmp_4;
double tmp_35 =  tmp_33+tmp_34;
double tmp_36 = x(9);
double tmp_37 =  tmp_7+tmp_36;
double g0_9 = -( 2.0*tmp_36+tmp_5+tmp_12+-4.0*tmp_6)*( tmp_22*( tmp_29*tmp_13-tmp_8*tmp_25)+( tmp_4*tmp_8-tmp_13*tmp_11)*tmp_19+tmp_35*tmp_37)/60.0-tmp_35*( const_pow<2,1>(tmp_22)+const_pow<2,1>(tmp_19)+tmp_4*tmp_11+const_pow<2,1>(tmp_37)+tmp_13*tmp_37+const_pow<2,1>(tmp_25)+const_pow<2,1>(tmp_4)+tmp_8*tmp_37+const_pow<2,1>(tmp_13)+tmp_11*tmp_22+tmp_29*tmp_25+const_pow<2,1>(tmp_11)+const_pow<2,1>(tmp_8)+tmp_29*tmp_19+const_pow<2,1>(tmp_29)+tmp_4*tmp_22+tmp_25*tmp_19+tmp_13*tmp_8)/60.0;
g(0,9) = g0_9;
}
{
double tmp_1 = x(5);
double tmp_2 = x(2);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = x(0);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = tmp_8*tmp_4;
double tmp_10 = x(8);
double tmp_11 =  tmp_3+tmp_10;
double tmp_12 = x(3);
double tmp_13 =  tmp_12+tmp_7;
double tmp_14 = -tmp_13*tmp_11;
double tmp_15 =  tmp_9+tmp_14;
double tmp_16 = x(1);
double tmp_17 = x(4);
double tmp_18 = -tmp_17;
double tmp_19 =  tmp_18+tmp_16;
double tmp_20 = x(11);
double tmp_21 =  tmp_3+tmp_20;
double tmp_24 = x(10);
double tmp_25 = -tmp_24;
double tmp_26 =  tmp_25+tmp_16;
double tmp_29 = x(9);
double tmp_30 =  tmp_7+tmp_29;
double tmp_33 = x(7);
double tmp_34 = -tmp_33;
double tmp_35 =  tmp_34+tmp_16;
double g0_10 =  ( tmp_34+tmp_18+4.0*tmp_16+-2.0*tmp_24)*( tmp_15*tmp_26-tmp_30*( tmp_35*tmp_4-tmp_19*tmp_11)+tmp_21*( tmp_35*tmp_13-tmp_8*tmp_19))/60.0+tmp_15*( tmp_35*tmp_26+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_11)+tmp_21*tmp_4+const_pow<2,1>(tmp_30)+tmp_8*tmp_13+const_pow<2,1>(tmp_35)+tmp_21*tmp_11+tmp_13*tmp_30+const_pow<2,1>(tmp_8)+tmp_19*tmp_26+const_pow<2,1>(tmp_21)+const_pow<2,1>(tmp_26)+tmp_8*tmp_30+const_pow<2,1>(tmp_4)+const_pow<2,1>(tmp_13)+tmp_4*tmp_11+tmp_35*tmp_19)/60.0;
g(0,10) = g0_10;
}
{
double tmp_1 = x(1);
double tmp_2 = x(4);
double tmp_3 = -tmp_2;
double tmp_4 =  tmp_1+tmp_3;
double tmp_5 = x(5);
double tmp_6 = x(2);
double tmp_7 = -tmp_6;
double tmp_8 =  tmp_7+tmp_5;
double tmp_9 = x(8);
double tmp_10 =  tmp_7+tmp_9;
double tmp_11 = x(11);
double tmp_12 =  tmp_7+tmp_11;
double tmp_14 = x(3);
double tmp_15 = x(0);
double tmp_16 = -tmp_15;
double tmp_17 =  tmp_14+tmp_16;
double tmp_18 = x(6);
double tmp_19 =  tmp_18+tmp_16;
double tmp_21 = x(10);
double tmp_22 = -tmp_21;
double tmp_23 =  tmp_22+tmp_1;
double tmp_26 = x(9);
double tmp_27 =  tmp_26+tmp_16;
double tmp_30 = x(7);
double tmp_31 = -tmp_30;
double tmp_32 =  tmp_1+tmp_31;
double tmp_37 = tmp_19*tmp_4;
double tmp_38 = -tmp_32*tmp_17;
double tmp_39 =  tmp_37+tmp_38;
double g0_11 = -( 2.0*tmp_11+tmp_5+tmp_9+-4.0*tmp_6)*( tmp_27*( tmp_10*tmp_4-tmp_32*tmp_8)-tmp_39*tmp_12+tmp_23*( tmp_19*tmp_8-tmp_10*tmp_17))/60.0+( tmp_19*tmp_27+tmp_4*tmp_23+const_pow<2,1>(tmp_8)+const_pow<2,1>(tmp_17)+tmp_32*tmp_4+tmp_10*tmp_12+const_pow<2,1>(tmp_23)+tmp_32*tmp_23+const_pow<2,1>(tmp_12)+tmp_17*tmp_27+const_pow<2,1>(tmp_4)+const_pow<2,1>(tmp_27)+const_pow<2,1>(tmp_19)+const_pow<2,1>(tmp_10)+tmp_10*tmp_8+tmp_8*tmp_12+const_pow<2,1>(tmp_32)+tmp_19*tmp_17)*tmp_39/60.0;
g(0,11) = g0_11;
}
      }
   }
}
